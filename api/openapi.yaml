openapi: 3.0.1
info:
  contact:
    email: info@nodeum.io
    name: Nodeum
    url: https://www.nodeum.io/
  description: "The Nodeum API makes it easy to tap into the digital data mesh that\
    \ runs across your organisation. Make requests to our API endpoints and we’ll\
    \ give you everything you need to interconnect your business workflows with your\
    \ storage.\n\nAll production API requests are made to:\n\nhttp://nodeumhostname/api/\n\
    \nThe current production version of the API is v1. \n\n**REST**\nThe Nodeum API\
    \ is a RESTful API. This means that the API is designed to allow you to get, create,\
    \ update, & delete objects with the HTTP verbs GET, POST, PUT, PATCH, & DELETE.\n\
    \n**JSON**\nThe Nodeum API speaks exclusively in JSON. This means that you should\
    \ always set the Content-Type header to application/json to ensure that your requests\
    \ are properly accepted and processed by the API.\n\n**Authentication**\nAll API\
    \ calls require user-password authentication. \n\n**Cross-Origin Resource Sharing**\n\
    The Nodeum API supports CORS for communicating from Javascript for these endpoints.\
    \ You will need to specify an Origin URI when creating your application to allow\
    \ for CORS to be whitelisted for your domain. \n\n**Pagination**\nSome endpoints\
    \ such as File Listing return a potentially lengthy array of objects. In order\
    \ to keep the response sizes manageable the API will take advantage of pagination.\
    \ Pagination is a mechanism for returning a subset of the results for a request\
    \ and allowing for subsequent requests to “page” through the rest of the results\
    \ until the end is reached. Paginated endpoints follow a standard interface that\
    \ accepts two query parameters, limit and offset, and return a payload that follows\
    \ a standard form. These parameters names and their behavior are borrowed from\
    \ SQL LIMIT and OFFSET keywords.\n\n**Versioning**\nThe Nodeum API is constantly\
    \ being worked on to add features, make improvements, and fix bugs. This means\
    \ that you should expect changes to be introduced and documented. \n\nHowever,\
    \ there are some changes or additions that are considered backwards-compatible\
    \ and your applications should be flexible enough to handle them. These include:\n\
    \n- Adding new endpoints to the API\n- Adding new attributes to the response of\
    \ an existing endpoint\n- Changing the order of attributes of responses (JSON\
    \ by definition is an object of unordered key/value pairs)\n\n**Filter parameters**\n\
    When browsing a list of items, multiple filter parameters may be applied.\nSome\
    \ operators can be added to the value as a prefix:\n - `=` value is equal. Default\
    \ operator, may be omitted\n - `!=` value is different\n - `>` greater than\n\
    \ - `>=` greater than or equal\n - `<` lower than\n - `>=` lower than or equal\n\
    \ - `><` included in list, items should be separated by `|`\n - `!><` not included\
    \ in list, items should be separated by `|`\n - `~` pattern matching, may include\
    \ `%` (any characters) and `_` (one character)\n - `!~` pattern not matching,\
    \ may include `%` (any characters) and `_` (one character)\n "
  termsOfService: https://www.nodeum.io/application-programming-interface-terms-of-use
  title: Nodeum API
  version: 2.1.0
servers:
- url: /api/v2
security:
- BasicAuth: []
- BearerAuth: []
paths:
  /users/me/api_keys:
    get:
      description: '**API Key Scope**: api_keys / index'
      operationId: index_api_keys
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_key_collection'
          description: List of API Keys.
      summary: Lists all API keys of current user.
      tags:
      - users
    post:
      description: '**API Key Scope**: api_keys / create'
      operationId: create_api_key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_key_full'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_key_full'
          description: A specific file.
      summary: Creates a new API Key for current user.
      tags:
      - users
      x-codegen-request-body-name: api_key_body
  /users/me/api_keys/{api_key_id}:
    delete:
      description: '**API Key Scope**: api_keys / destroy'
      operationId: destroy_api_key
      parameters:
      - description: Numeric ID of API Key.
        in: path
        name: api_key_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: API Key destroyed.
      summary: Destroys a specific API Key.
      tags:
      - users
    get:
      description: '**API Key Scope**: api_keys / show'
      operationId: show_api_key
      parameters:
      - description: Numeric ID of API Key.
        in: path
        name: api_key_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_key_full'
          description: A specific file.
      summary: Displays a specific API Key with its scopes.
      tags:
      - users
    put:
      description: '**API Key Scope**: api_keys / update'
      operationId: update_api_key
      parameters:
      - description: Numeric ID of API Key.
        in: path
        name: api_key_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_key_full'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_key_full'
          description: A specific file.
      summary: Updates a specific API Key.
      tags:
      - users
      x-codegen-request-body-name: api_key_body
  /users/-/systems:
    get:
      description: '**API Key Scope**: users / systems'
      operationId: index_system_users
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/system_user_collection'
      summary: List all system users.
      tags:
      - users
  /groups/-/systems:
    get:
      description: '**API Key Scope**: groups / systems'
      operationId: index_system_groups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/system_group_collection'
      summary: List all system groups.
      tags:
      - users
  /files:
    get:
      description: '**API Key Scope**: files / index'
      operationId: index_files
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files on root.
      tags:
      - files
  /files/{file_id}:
    get:
      description: '**API Key Scope**: files / show'
      operationId: show_file
      parameters:
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_with_path'
          description: A specific file.
      summary: Displays a specific file.
      tags:
      - files
  /files/{file_parent_id}/children:
    get:
      description: '**API Key Scope**: files / index'
      operationId: files_children
      parameters:
      - description: Numeric ID of parent folder.
        in: path
        name: file_parent_id
        required: true
        schema:
          type: integer
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files under a specific folder.
      tags:
      - files
  /mounts:
    get:
      description: '**API Key Scope**: mounts / index'
      operationId: index_mounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_collection'
          description: List of mounted storages.
      summary: List all mounted storages.
      tags:
      - mounts
  /containers:
    get:
      description: '**API Key Scope**: containers / index'
      operationId: index_containers
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on comment
        in: query
        name: comment
        schema:
          type: string
      - description: Filter on quota total size
        in: query
        name: quota_total_size
        schema:
          type: string
      - description: Filter on quota on cache
        in: query
        name: quota_on_cache
        schema:
          type: string
      - description: Filter on stat total files
        in: query
        name: stat_total_files
        schema:
          type: string
      - description: Filter on stat total size
        in: query
        name: stat_total_size
        schema:
          type: string
      - description: Filter on stat size on cache
        in: query
        name: stat_size_on_cache
        schema:
          type: string
      - description: Filter on guest right
        in: query
        name: guest_right
        schema:
          type: string
      - description: Filter on last update
        in: query
        name: last_update
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container_collection'
          description: List of containers.
      summary: Lists all containers.
      tags:
      - containers
    post:
      description: |-
        It **does not** yet create the file structure and configure the samba connection. Use API v1 instead.

        **API Key Scope**: containers / create
      operationId: create_container
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: A specific container.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new container.
      tags:
      - containers
      x-codegen-request-body-name: container_body
  /containers/{container_id}:
    delete:
      description: '**API Key Scope**: containers / destroy'
      operationId: destroy_container
      parameters:
      - description: Numeric ID or name of container.
        in: path
        name: container_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Container destroyed.
      summary: Destroys a specific container.
      tags:
      - containers
    get:
      description: '**API Key Scope**: containers / show'
      operationId: show_container
      parameters:
      - description: Numeric ID or name of container.
        in: path
        name: container_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: A specific container.
      summary: Displays a specific container.
      tags:
      - containers
    put:
      description: |-
        It **does not** yet create the file structure and configure the samba connection. Use API v1 instead.

        **API Key Scope**: containers / update
      operationId: update_container
      parameters:
      - description: Numeric ID or name of container.
        in: path
        name: container_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container'
          description: A specific container.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific container.
      tags:
      - containers
      x-codegen-request-body-name: container_body
  /containers/{container_id}/container_privileges:
    get:
      description: '**API Key Scope**: container_privileges / index'
      operationId: index_container_privileges
      parameters:
      - description: Numeric ID or name of container.
        in: path
        name: container_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on privilege
        in: query
        name: privilege
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container_privilege_collection'
          description: List of container privileges.
      summary: Lists all privilege on the container.
      tags:
      - containers
    post:
      description: '**API Key Scope**: container_privileges / create'
      operationId: create_container_privilege
      parameters:
      - description: Numeric ID or name of container.
        in: path
        name: container_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_privilege'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container_privilege'
          description: A specific container privilege.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new privilege on the container.
      tags:
      - containers
      x-codegen-request-body-name: container_privilege_body
  /containers/{container_id}/container_privileges/{container_privilege_id}:
    delete:
      description: '**API Key Scope**: container_privileges / destroy'
      operationId: destroy_container_privilege
      parameters:
      - description: Numeric ID or name of container.
        in: path
        name: container_id
        required: true
        schema:
          type: string
      - description: Numeric ID of container privilege.
        in: path
        name: container_privilege_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Container privilege destroyed.
      summary: Destroys a specific privilege.
      tags:
      - containers
    get:
      description: '**API Key Scope**: container_privileges / show'
      operationId: show_container_privilege
      parameters:
      - description: Numeric ID or name of container.
        in: path
        name: container_id
        required: true
        schema:
          type: string
      - description: Numeric ID of container privilege.
        in: path
        name: container_privilege_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container_privilege'
          description: A specific container privilege.
      summary: Displays a specific privilege.
      tags:
      - containers
    put:
      description: '**API Key Scope**: container_privileges / update'
      operationId: update_container_privilege
      parameters:
      - description: Numeric ID or name of container.
        in: path
        name: container_id
        required: true
        schema:
          type: string
      - description: Numeric ID of container privilege.
        in: path
        name: container_privilege_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container_privilege'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container_privilege'
          description: A specific container privilege.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific privilege.
      tags:
      - containers
      x-codegen-request-body-name: container_privilege_body
  /containers/{container_id}/files:
    get:
      description: '**API Key Scope**: files / index'
      operationId: index_files_by_container
      parameters:
      - description: Numeric ID or name of container.
        in: path
        name: container_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files on root.
      tags:
      - files
  /containers/{container_id}/files/{file_id}:
    get:
      description: '**API Key Scope**: files / show'
      operationId: show_file_by_container
      parameters:
      - description: Numeric ID or name of container.
        in: path
        name: container_id
        required: true
        schema:
          type: string
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_with_path'
          description: A specific file.
      summary: Displays a specific file.
      tags:
      - files
  /containers/{container_id}/files/{file_parent_id}/children:
    get:
      description: '**API Key Scope**: files / index'
      operationId: files_children_by_container
      parameters:
      - description: Numeric ID or name of container.
        in: path
        name: container_id
        required: true
        schema:
          type: string
      - description: Numeric ID of parent folder.
        in: path
        name: file_parent_id
        required: true
        schema:
          type: integer
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files under a specific folder.
      tags:
      - files
  /tape_libraries:
    get:
      description: '**API Key Scope**: tape_libraries / index'
      operationId: index_tape_libraries
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on serial
        in: query
        name: serial
        schema:
          type: string
      - description: Filter on comment
        in: query
        name: comment
        schema:
          type: string
      - description: Filter on protocol
        in: query
        name: protocol
        schema:
          type: string
      - description: Filter on vendor
        in: query
        name: vendor
        schema:
          type: string
      - description: Filter on product
        in: query
        name: product
        schema:
          type: string
      - description: Filter on firmware
        in: query
        name: firmware
        schema:
          type: string
      - description: Filter on device
        in: query
        name: device
        schema:
          type: string
      - description: Filter on libso
        in: query
        name: libso
        schema:
          type: string
      - description: Filter on acs
        in: query
        name: acs
        schema:
          type: string
      - description: Filter on status
        in: query
        name: status
        schema:
          type: string
      - description: Filter on storage slots
        in: query
        name: storage_slots
        schema:
          type: string
      - description: Filter on storage slots address
        in: query
        name: storage_slots_address
        schema:
          type: string
      - description: Filter on io slots
        in: query
        name: io_slots
        schema:
          type: string
      - description: Filter on io slots address
        in: query
        name: io_slots_address
        schema:
          type: string
      - description: Filter on price
        in: query
        name: price
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_library_collection'
          description: List of tape libraries.
      summary: Lists all tape libraries.
      tags:
      - tape_libraries
    post:
      description: '**API Key Scope**: tape_libraries / create'
      operationId: create_tape_library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tape_library'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_library'
          description: A specific tape library.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new tape library.
      tags:
      - tape_libraries
      x-codegen-request-body-name: tape_library_body
  /tape_libraries/-/devices:
    get:
      description: '**API Key Scope**: tape_libraries / devices'
      operationId: index_tape_library_devices
      parameters:
      - description: ID of active job
        in: query
        name: job_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_library_device_collection'
          description: List of tape libraries devices.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Lists tape libraries devices.
      tags:
      - tape_libraries
  /tape_libraries/{tape_library_id}:
    delete:
      description: '**API Key Scope**: tape_libraries / destroy'
      operationId: destroy_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Tape library destroyed.
      summary: Destroys a specific tape library.
      tags:
      - tape_libraries
    get:
      description: '**API Key Scope**: tape_libraries / show'
      operationId: show_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_library'
          description: A specific tape library.
      summary: Displays a specific tape library.
      tags:
      - tape_libraries
    put:
      description: '**API Key Scope**: tape_libraries / update'
      operationId: update_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tape_library'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_library'
          description: A specific tape library.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific tape library.
      tags:
      - tape_libraries
      x-codegen-request-body-name: tape_library_body
  /tape_libraries/{tape_library_id}/tape_drives:
    get:
      description: '**API Key Scope**: tape_drives / index'
      operationId: index_tape_drives_by_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on serial
        in: query
        name: serial
        schema:
          type: string
      - description: Filter on comment
        in: query
        name: comment
        schema:
          type: string
      - description: Filter on scsi address
        in: query
        name: scsi_address
        schema:
          type: string
      - description: Filter on vendor
        in: query
        name: vendor
        schema:
          type: string
      - description: Filter on product
        in: query
        name: product
        schema:
          type: string
      - description: Filter on firmware
        in: query
        name: firmware
        schema:
          type: string
      - description: Filter on device
        in: query
        name: device
        schema:
          type: string
      - description: Filter on sgdevice
        in: query
        name: sgdevice
        schema:
          type: string
      - description: Filter on libso
        in: query
        name: libso
        schema:
          type: string
      - description: Filter on acs
        in: query
        name: acs
        schema:
          type: string
      - description: Filter on lsm
        in: query
        name: lsm
        schema:
          type: string
      - description: Filter on panel
        in: query
        name: panel
        schema:
          type: string
      - description: Filter on transport
        in: query
        name: transport
        schema:
          type: string
      - description: Filter on status
        in: query
        name: status
        schema:
          type: string
      - description: Filter on full
        in: query
        name: full
        schema:
          type: string
      - description: Filter on mount count
        in: query
        name: mount_count
        schema:
          type: string
      - description: Filter on use to
        in: query
        name: use_to
        schema:
          type: string
      - description: Filter on use by
        in: query
        name: use_by
        schema:
          type: string
      - description: Filter on barcode
        in: query
        name: barcode
        schema:
          type: string
      - description: Filter on task id
        in: query
        name: task_id
        schema:
          type: string
      - description: Filter on use file processed size
        in: query
        name: use_file_processed_size
        schema:
          type: string
      - description: Filter on use file size to process
        in: query
        name: use_file_size_to_process
        schema:
          type: string
      - description: Filter on use file name processed
        in: query
        name: use_file_name_processed
        schema:
          type: string
      - description: Filter on bandwidth
        in: query
        name: bandwidth
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_drive_collection'
          description: List of tape drives.
      summary: Lists all tape drives.
      tags:
      - tape_drives
    post:
      description: '**API Key Scope**: tape_drives / create'
      operationId: create_tape_drive_by_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tape_drive'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_drive'
          description: A specific tape drive.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new tape drive.
      tags:
      - tape_drives
      x-codegen-request-body-name: tape_drive_body
  /tape_libraries/{tape_library_id}/tape_drives/-/devices:
    get:
      description: '**API Key Scope**: tape_drives / devices'
      operationId: index_tape_drive_devices
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      - description: ID of active job
        in: query
        name: job_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_drive_device_collection'
          description: List of tape drives devices.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Lists tape drives devices.
      tags:
      - tape_drives
  /tape_libraries/{tape_library_id}/tape_drives/{tape_drive_id}:
    delete:
      description: '**API Key Scope**: tape_drives / destroy'
      operationId: destroy_tape_drive_by_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      - description: Numeric ID, serial, or name of tape drive.
        in: path
        name: tape_drive_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Tape drive destroyed.
      summary: Destroys a specific tape drive.
      tags:
      - tape_drives
    get:
      description: '**API Key Scope**: tape_drives / show'
      operationId: show_tape_drive_by_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      - description: Numeric ID, serial, or name of tape drive.
        in: path
        name: tape_drive_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_drive'
          description: A specific tape drive.
      summary: Displays a specific tape drive.
      tags:
      - tape_drives
    put:
      description: '**API Key Scope**: tape_drives / update'
      operationId: update_tape_drive_by_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      - description: Numeric ID, serial, or name of tape drive.
        in: path
        name: tape_drive_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tape_drive'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_drive'
          description: A specific tape drive.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific tape drive.
      tags:
      - tape_drives
      x-codegen-request-body-name: tape_drive_body
  /tape_libraries/{tape_library_id}/tapes:
    get:
      description: '**API Key Scope**: tapes / index'
      operationId: index_tapes_by_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on a pool id
        in: query
        name: pool_id
        schema:
          type: string
      - description: Filter on barcode
        in: query
        name: barcode
        schema:
          type: string
      - description: Filter on location
        in: query
        name: location
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on locked
        in: query
        name: locked
        schema:
          type: string
      - description: Filter on scratch
        in: query
        name: scratch
        schema:
          type: string
      - description: Filter on cleaning
        in: query
        name: cleaning
        schema:
          type: string
      - description: Filter on write protect
        in: query
        name: write_protect
        schema:
          type: string
      - description: Filter on mounted
        in: query
        name: mounted
        schema:
          type: string
      - description: Filter on ejected
        in: query
        name: ejected
        schema:
          type: string
      - description: Filter on known
        in: query
        name: known
        schema:
          type: string
      - description: Filter on mount count
        in: query
        name: mount_count
        schema:
          type: string
      - description: Filter on date in
        in: query
        name: date_in
        schema:
          type: string
      - description: Filter on date move
        in: query
        name: date_move
        schema:
          type: string
      - description: Filter on free
        in: query
        name: free
        schema:
          type: string
      - description: Filter on max
        in: query
        name: max
        schema:
          type: string
      - description: Filter on last size update
        in: query
        name: last_size_update
        schema:
          type: string
      - description: Filter on last maintenance
        in: query
        name: last_maintenance
        schema:
          type: string
      - description: Filter on last repack
        in: query
        name: last_repack
        schema:
          type: string
      - description: Filter on repack status
        in: query
        name: repack_status
        schema:
          type: string
      - description: Filter on hash
        in: query
        name: hash
        schema:
          type: string
      - description: Filter on force import type
        in: query
        name: force_import_type
        schema:
          type: string
      - description: Filter on need to check
        in: query
        name: need_to_check
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_collection'
          description: List of tapes.
      summary: Lists all tapes.
      tags:
      - tapes
  /tape_libraries/{tape_library_id}/tapes/{tape_id}:
    get:
      description: '**API Key Scope**: tapes / show'
      operationId: show_tape_by_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      - description: Numeric ID, or barcode of tape.
        in: path
        name: tape_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape'
          description: A specific tape.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Displays a specific tape.
      tags:
      - tapes
  /tape_libraries/{tape_library_id}/tapes/{tape_id}/mount:
    get:
      description: '**API Key Scope**: tapes / mount_status'
      operationId: mount_status_tape_by_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      - description: Numeric ID, or barcode of tape.
        in: path
        name: tape_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Get mount status of Tape.
      tags:
      - tapes
  /tape_libraries/{tape_library_id}/tapes/{tape_id}/tape_stat:
    get:
      description: '**API Key Scope**: tape_stats / show'
      operationId: show_tape_stat_by_tape_library
      parameters:
      - description: Numeric ID, serial, or name of tape library.
        in: path
        name: tape_library_id
        required: true
        schema:
          type: string
      - description: Numeric ID, or barcode of tape.
        in: path
        name: tape_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_stat'
          description: A specific tape statistic.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Display statistic for a specific tape.
      tags:
      - tapes
  /pools:
    get:
      description: '**API Key Scope**: pools / index'
      operationId: index_pools
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on comment
        in: query
        name: comment
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on content
        in: query
        name: content
        schema:
          type: string
      - description: Filter on primary id
        in: query
        name: primary_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool_collection'
          description: List of pools.
      summary: Lists all pools.
      tags:
      - pools
    post:
      description: '**API Key Scope**: pools / create'
      operationId: create_pool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_up'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool'
          description: A specific pool.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new pool.
      tags:
      - pools
      x-codegen-request-body-name: pool_body
  /pools/{pool_id}:
    delete:
      description: '**API Key Scope**: pools / destroy'
      operationId: destroy_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Pool destroyed.
      summary: Destroys a specific tape pool.
      tags:
      - pools
    get:
      description: '**API Key Scope**: pools / show'
      operationId: show_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool'
          description: A specific pool.
      summary: Displays a specific pool.
      tags:
      - pools
    put:
      description: '**API Key Scope**: pools / update'
      operationId: update_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pool_up'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool'
          description: A specific pool.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific pool.
      tags:
      - pools
      x-codegen-request-body-name: pool_body
  /pools/{pool_id}/primary_scan:
    delete:
      description: '**API Key Scope**: primary_scans / destroy'
      operationId: destroy_primary_scan
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Primary pool scan disabled.
      summary: Disable the primary pool scan.
      tags:
      - pools
    get:
      description: '**API Key Scope**: primary_scans / show'
      operationId: show_primary_scan
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/primary_scan'
          description: The primary pool scan status.
      summary: Displays the primary pool scan status.
      tags:
      - pools
    post:
      description: '**API Key Scope**: primary_scans / create'
      operationId: create_primary_scan
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/primary_scan'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/primary_scan'
          description: The primary pool scan status.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Set a new primary pool scan option.
      tags:
      - pools
      x-codegen-request-body-name: primary_scan_body
    put:
      description: '**API Key Scope**: primary_scans / update'
      operationId: update_primary_scan
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/primary_scan'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/primary_scan'
          description: The primary pool scan status.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates the existing primary pool scan option.
      tags:
      - pools
      x-codegen-request-body-name: primary_scan_body
  /pools/{pool_id}/sync:
    post:
      description: '**API Key Scope**: pools / sync_primary'
      operationId: sync_primary_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: New transaction number.
        in: query
        name: tx
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Synchronization triggered.
      summary: Synchronize a primary after a scan (for internal use only).
      tags:
      - pools
  /pools/{pool_id}/mount:
    delete:
      description: '**API Key Scope**: pools / unmount'
      operationId: unmount_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Unmount Pool.
      tags:
      - pools
    get:
      description: '**API Key Scope**: pools / mount_status'
      operationId: mount_status_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Get mount status of Pool.
      tags:
      - pools
    put:
      description: '**API Key Scope**: pools / mount'
      operationId: mount_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Mount Pool.
      tags:
      - pools
  /pools/{pool_id}/files:
    get:
      description: '**API Key Scope**: files / index'
      operationId: index_files_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files on root.
      tags:
      - files
  /pools/{pool_id}/files/{file_id}:
    get:
      description: '**API Key Scope**: files / show'
      operationId: show_file_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_with_path'
          description: A specific file.
      summary: Displays a specific file.
      tags:
      - files
  /pools/{pool_id}/files/{file_id}/tapes:
    get:
      description: '**API Key Scope**: files / tapes'
      operationId: index_tapes_by_file_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_collection'
          description: List of tapes.
      summary: Displays tapes containing specific file, related to the specific pool.
      tags:
      - files
  /pools/{pool_id}/files/{file_parent_id}/children:
    get:
      description: '**API Key Scope**: files / index'
      operationId: files_children_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID of parent folder.
        in: path
        name: file_parent_id
        required: true
        schema:
          type: integer
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files under a specific folder.
      tags:
      - files
  /pools/{pool_id}/import_files:
    get:
      description: '**API Key Scope**: import_files / index'
      operationId: index_import_files_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/import_file_collection'
          description: List of imported files.
      summary: Lists files on root of tape of pools, specific for Data Exchange.
      tags:
      - files
  /pools/{pool_id}/import_files/{file_id}:
    get:
      description: '**API Key Scope**: import_files / show'
      operationId: show_import_file_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/import_file_with_path'
          description: A specific imported file.
      summary: Displays a specific file on tape of pools, specific for Data Exchange.
      tags:
      - files
  /pools/{pool_id}/import_files/{file_parent_id}/children:
    get:
      description: '**API Key Scope**: import_files / index'
      operationId: import_files_children_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID of parent folder.
        in: path
        name: file_parent_id
        required: true
        schema:
          type: integer
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/import_file_collection'
          description: List of imported files.
      summary: Lists files under a specific folder on tape of pools, specific for
        Data Exchange.
      tags:
      - files
  /pools/{pool_id}/on_tapes_files:
    get:
      description: '**API Key Scope**: on_tapes_files / index'
      operationId: index_on_tapes_files_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/on_tapes_file_collection'
          description: List of files on tapes.
      summary: Lists files on root of tape of pools, specific for Active and Offline.
      tags:
      - files
  /pools/{pool_id}/on_tapes_files/{file_id}:
    get:
      description: '**API Key Scope**: on_tapes_files / show'
      operationId: show_on_tape_file_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/on_tapes_file'
          description: A specific file on tapes.
      summary: Displays a specific file on tape of pools, specific for Active and
        Offline.
      tags:
      - files
  /pools/{pool_id}/on_tapes_files/{file_parent_id}/children:
    get:
      description: '**API Key Scope**: on_tapes_files / index'
      operationId: on_tapes_files_children_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID of parent folder.
        in: path
        name: file_parent_id
        required: true
        schema:
          type: integer
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/on_tapes_file_collection'
          description: List of files on tapes.
      summary: Lists files under a specific folder on tape of pools, specific for
        Active and Offline.
      tags:
      - files
  /pools/{pool_id}/tapes:
    get:
      description: '**API Key Scope**: tapes / index'
      operationId: index_tapes_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on tape library id
        in: query
        name: tape_library_id
        schema:
          type: string
      - description: Filter on barcode
        in: query
        name: barcode
        schema:
          type: string
      - description: Filter on location
        in: query
        name: location
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on locked
        in: query
        name: locked
        schema:
          type: string
      - description: Filter on scratch
        in: query
        name: scratch
        schema:
          type: string
      - description: Filter on cleaning
        in: query
        name: cleaning
        schema:
          type: string
      - description: Filter on write protect
        in: query
        name: write_protect
        schema:
          type: string
      - description: Filter on mounted
        in: query
        name: mounted
        schema:
          type: string
      - description: Filter on ejected
        in: query
        name: ejected
        schema:
          type: string
      - description: Filter on known
        in: query
        name: known
        schema:
          type: string
      - description: Filter on mount count
        in: query
        name: mount_count
        schema:
          type: string
      - description: Filter on date in
        in: query
        name: date_in
        schema:
          type: string
      - description: Filter on date move
        in: query
        name: date_move
        schema:
          type: string
      - description: Filter on free
        in: query
        name: free
        schema:
          type: string
      - description: Filter on max
        in: query
        name: max
        schema:
          type: string
      - description: Filter on last size update
        in: query
        name: last_size_update
        schema:
          type: string
      - description: Filter on last maintenance
        in: query
        name: last_maintenance
        schema:
          type: string
      - description: Filter on last repack
        in: query
        name: last_repack
        schema:
          type: string
      - description: Filter on repack status
        in: query
        name: repack_status
        schema:
          type: string
      - description: Filter on hash
        in: query
        name: hash
        schema:
          type: string
      - description: Filter on force import type
        in: query
        name: force_import_type
        schema:
          type: string
      - description: Filter on need to check
        in: query
        name: need_to_check
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_collection'
          description: List of tapes.
      summary: Lists all tapes.
      tags:
      - tapes
  /pools/{pool_id}/tapes/{tape_id}:
    get:
      description: '**API Key Scope**: tapes / show'
      operationId: show_tape_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID, or barcode of tape.
        in: path
        name: tape_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape'
          description: A specific tape.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Displays a specific tape.
      tags:
      - tapes
  /pools/{pool_id}/tapes/{tape_id}/mount:
    get:
      description: '**API Key Scope**: tapes / mount_status'
      operationId: mount_status_tape_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID, or barcode of tape.
        in: path
        name: tape_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Get mount status of Tape.
      tags:
      - tapes
  /pools/{pool_id}/tapes/{tape_id}/tape_stat:
    get:
      description: '**API Key Scope**: tape_stats / show'
      operationId: show_tape_stat_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID, or barcode of tape.
        in: path
        name: tape_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_stat'
          description: A specific tape statistic.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Display statistic for a specific tape.
      tags:
      - tapes
  /tape_drives:
    get:
      description: '**API Key Scope**: tape_drives / index'
      operationId: index_tape_drives
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on tape library id
        in: query
        name: tape_library_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on serial
        in: query
        name: serial
        schema:
          type: string
      - description: Filter on comment
        in: query
        name: comment
        schema:
          type: string
      - description: Filter on scsi address
        in: query
        name: scsi_address
        schema:
          type: string
      - description: Filter on vendor
        in: query
        name: vendor
        schema:
          type: string
      - description: Filter on product
        in: query
        name: product
        schema:
          type: string
      - description: Filter on firmware
        in: query
        name: firmware
        schema:
          type: string
      - description: Filter on device
        in: query
        name: device
        schema:
          type: string
      - description: Filter on sgdevice
        in: query
        name: sgdevice
        schema:
          type: string
      - description: Filter on libso
        in: query
        name: libso
        schema:
          type: string
      - description: Filter on acs
        in: query
        name: acs
        schema:
          type: string
      - description: Filter on lsm
        in: query
        name: lsm
        schema:
          type: string
      - description: Filter on panel
        in: query
        name: panel
        schema:
          type: string
      - description: Filter on transport
        in: query
        name: transport
        schema:
          type: string
      - description: Filter on status
        in: query
        name: status
        schema:
          type: string
      - description: Filter on full
        in: query
        name: full
        schema:
          type: string
      - description: Filter on mount count
        in: query
        name: mount_count
        schema:
          type: string
      - description: Filter on use to
        in: query
        name: use_to
        schema:
          type: string
      - description: Filter on use by
        in: query
        name: use_by
        schema:
          type: string
      - description: Filter on barcode
        in: query
        name: barcode
        schema:
          type: string
      - description: Filter on task id
        in: query
        name: task_id
        schema:
          type: string
      - description: Filter on use file processed size
        in: query
        name: use_file_processed_size
        schema:
          type: string
      - description: Filter on use file size to process
        in: query
        name: use_file_size_to_process
        schema:
          type: string
      - description: Filter on use file name processed
        in: query
        name: use_file_name_processed
        schema:
          type: string
      - description: Filter on bandwidth
        in: query
        name: bandwidth
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_drive_collection'
          description: List of tape drives.
      summary: Lists all tape drives.
      tags:
      - tape_drives
  /tape_drives/{tape_drive_id}:
    delete:
      description: '**API Key Scope**: tape_drives / destroy'
      operationId: destroy_tape_drive
      parameters:
      - description: Numeric ID, serial, or name of tape drive.
        in: path
        name: tape_drive_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Tape drive destroyed.
      summary: Destroys a specific tape drive.
      tags:
      - tape_drives
    get:
      description: '**API Key Scope**: tape_drives / show'
      operationId: show_tape_drive
      parameters:
      - description: Numeric ID, serial, or name of tape drive.
        in: path
        name: tape_drive_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_drive'
          description: A specific tape drive.
      summary: Displays a specific tape drive.
      tags:
      - tape_drives
    put:
      description: '**API Key Scope**: tape_drives / update'
      operationId: update_tape_drive
      parameters:
      - description: Numeric ID, serial, or name of tape drive.
        in: path
        name: tape_drive_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tape_drive'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_drive'
          description: A specific tape drive.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific tape drive.
      tags:
      - tape_drives
      x-codegen-request-body-name: tape_drive_body
  /tapes:
    get:
      description: '**API Key Scope**: tapes / index'
      operationId: index_tapes
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on tape library id
        in: query
        name: tape_library_id
        schema:
          type: string
      - description: Filter on a pool id
        in: query
        name: pool_id
        schema:
          type: string
      - description: Filter on barcode
        in: query
        name: barcode
        schema:
          type: string
      - description: Filter on location
        in: query
        name: location
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on locked
        in: query
        name: locked
        schema:
          type: string
      - description: Filter on scratch
        in: query
        name: scratch
        schema:
          type: string
      - description: Filter on cleaning
        in: query
        name: cleaning
        schema:
          type: string
      - description: Filter on write protect
        in: query
        name: write_protect
        schema:
          type: string
      - description: Filter on mounted
        in: query
        name: mounted
        schema:
          type: string
      - description: Filter on ejected
        in: query
        name: ejected
        schema:
          type: string
      - description: Filter on known
        in: query
        name: known
        schema:
          type: string
      - description: Filter on mount count
        in: query
        name: mount_count
        schema:
          type: string
      - description: Filter on date in
        in: query
        name: date_in
        schema:
          type: string
      - description: Filter on date move
        in: query
        name: date_move
        schema:
          type: string
      - description: Filter on free
        in: query
        name: free
        schema:
          type: string
      - description: Filter on max
        in: query
        name: max
        schema:
          type: string
      - description: Filter on last size update
        in: query
        name: last_size_update
        schema:
          type: string
      - description: Filter on last maintenance
        in: query
        name: last_maintenance
        schema:
          type: string
      - description: Filter on last repack
        in: query
        name: last_repack
        schema:
          type: string
      - description: Filter on repack status
        in: query
        name: repack_status
        schema:
          type: string
      - description: Filter on hash
        in: query
        name: hash
        schema:
          type: string
      - description: Filter on force import type
        in: query
        name: force_import_type
        schema:
          type: string
      - description: Filter on need to check
        in: query
        name: need_to_check
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_collection'
          description: List of tapes.
      summary: Lists all tapes.
      tags:
      - tapes
  /tapes/{tape_id}:
    get:
      description: '**API Key Scope**: tapes / show'
      operationId: show_tape
      parameters:
      - description: Numeric ID, or barcode of tape.
        in: path
        name: tape_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape'
          description: A specific tape.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Displays a specific tape.
      tags:
      - tapes
  /tapes/{tape_id}/mount:
    get:
      description: '**API Key Scope**: tapes / mount_status'
      operationId: mount_status_tape
      parameters:
      - description: Numeric ID, or barcode of tape.
        in: path
        name: tape_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Get mount status of Tape.
      tags:
      - tapes
  /tapes/{tape_id}/tape_stat:
    get:
      description: '**API Key Scope**: tape_stats / show'
      operationId: show_tape_stat
      parameters:
      - description: Numeric ID, or barcode of tape.
        in: path
        name: tape_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_stat'
          description: A specific tape statistic.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Display statistic for a specific tape.
      tags:
      - tapes
  /tape_stats:
    get:
      description: '**API Key Scope**: tape_stats / index'
      operationId: index_tape_stats
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_stat_collection'
          description: List of tape statistics.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: List all tape statistics.
      tags:
      - tapes
  /cloud_connectors:
    get:
      description: "**API Key Scope**: cloud_connectors / index  \nOptional API Key\
        \ Explicit Scope: cloud_connectors / get_secret_key"
      operationId: index_cloud_connectors
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on url
        in: query
        name: url
        schema:
          type: string
      - description: Filter on url proxy
        in: query
        name: url_proxy
        schema:
          type: string
      - description: Filter on provider
        in: query
        name: provider
        schema:
          type: string
      - description: Filter on region
        in: query
        name: region
        schema:
          type: string
      - description: Filter on access key
        in: query
        name: access_key
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_connector_collection'
          description: List of cloud connectors.
      summary: Lists all cloud connectors.
      tags:
      - cloud_connectors
    post:
      description: '**API Key Scope**: cloud_connectors / create'
      operationId: create_cloud_connector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloud_connector'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_connector'
          description: A specific cloud connector.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new cloud connector.
      tags:
      - cloud_connectors
      x-codegen-request-body-name: cloud_connector_body
  /cloud_connectors/-/test:
    get:
      description: '**API Key Scope**: cloud_connectors / test'
      operationId: test_result_cloud_connector
      parameters:
      - description: ID of active job
        in: query
        name: job_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_bucket_simple_collection'
          description: Simple list of cloud buckets.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Check result of cloud connector test job.
      tags:
      - cloud_connectors
    put:
      description: '**API Key Scope**: cloud_connectors / test'
      operationId: test_cloud_connector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloud_connector'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Test an unsaved cloud connector.
      tags:
      - cloud_connectors
      x-codegen-request-body-name: cloud_connector_body
  /cloud_connectors/{cloud_connector_id}:
    delete:
      description: '**API Key Scope**: cloud_connectors / destroy'
      operationId: destroy_cloud_connector
      parameters:
      - description: Numeric ID or name of cloud connector.
        in: path
        name: cloud_connector_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Cloud connector destroyed.
      summary: Destroys a specific cloud connector.
      tags:
      - cloud_connectors
    get:
      description: "**API Key Scope**: cloud_connectors / show  \nOptional API Key\
        \ Explicit Scope: cloud_connectors / get_secret_key"
      operationId: show_cloud_connector
      parameters:
      - description: Numeric ID or name of cloud connector.
        in: path
        name: cloud_connector_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_connector'
          description: A specific cloud connector.
      summary: Displays a specific cloud connector.
      tags:
      - cloud_connectors
    put:
      description: '**API Key Scope**: cloud_connectors / update'
      operationId: update_cloud_connector
      parameters:
      - description: Numeric ID or name of cloud connector.
        in: path
        name: cloud_connector_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloud_connector'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_connector'
          description: A specific cloud connector.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific cloud connector.
      tags:
      - cloud_connectors
      x-codegen-request-body-name: cloud_connector_body
  /cloud_connectors/{cloud_connector_id}/cloud_buckets:
    get:
      description: '**API Key Scope**: cloud_buckets / index'
      operationId: index_cloud_buckets_by_cloud_connector
      parameters:
      - description: Numeric ID or name of cloud connector.
        in: path
        name: cloud_connector_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on a pool id
        in: query
        name: pool_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on location
        in: query
        name: location
        schema:
          type: string
      - description: Filter on price
        in: query
        name: price
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_bucket_collection'
          description: List of cloud buckets.
      summary: Lists all cloud buckets.
      tags:
      - cloud_buckets
  /cloud_connectors/{cloud_connector_id}/cloud_buckets/-/sync:
    get:
      description: '**API Key Scope**: cloud_buckets / sync'
      operationId: sync_result_cloud_buckets
      parameters:
      - description: Numeric ID or name of cloud connector.
        in: path
        name: cloud_connector_id
        required: true
        schema:
          type: string
      - description: ID of active job
        in: query
        name: job_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_bucket_simple_collection'
          description: Simple list of cloud buckets.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Check result of cloud connector sync job.
      tags:
      - cloud_buckets
    put:
      description: '**API Key Scope**: cloud_buckets / sync'
      operationId: sync_cloud_buckets
      parameters:
      - description: Numeric ID or name of cloud connector.
        in: path
        name: cloud_connector_id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Synchronize internal cloud buckets with their remote equivalent.
      tags:
      - cloud_buckets
  /cloud_connectors/{cloud_connector_id}/cloud_buckets/{cloud_bucket_id}:
    get:
      description: '**API Key Scope**: cloud_buckets / show'
      operationId: show_cloud_bucket_by_cloud_connector
      parameters:
      - description: Numeric ID or name of cloud connector.
        in: path
        name: cloud_connector_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of cloud bucket.
        in: path
        name: cloud_bucket_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_bucket'
          description: A specific cloud bucket.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Displays a specific cloud bucket.
      tags:
      - cloud_buckets
    put:
      description: '**API Key Scope**: cloud_buckets / update'
      operationId: update_cloud_bucket_by_cloud_connector
      parameters:
      - description: Numeric ID or name of cloud connector.
        in: path
        name: cloud_connector_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of cloud bucket.
        in: path
        name: cloud_bucket_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloud_bucket'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_bucket'
          description: A specific cloud bucket.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Updates a specific cloud bucket.
      tags:
      - cloud_buckets
      x-codegen-request-body-name: cloud_bucket_body
  /cloud_connectors/{cloud_connector_id}/cloud_buckets/{cloud_bucket_id}/mount:
    get:
      description: '**API Key Scope**: cloud_buckets / mount_status'
      operationId: mount_status_cloud_bucket_by_cloud_connector
      parameters:
      - description: Numeric ID or name of cloud connector.
        in: path
        name: cloud_connector_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of cloud bucket.
        in: path
        name: cloud_bucket_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Get mount status of Cloud bucket.
      tags:
      - cloud_buckets
  /pools/{pool_id}/cloud_buckets:
    get:
      description: '**API Key Scope**: cloud_buckets / index'
      operationId: index_cloud_buckets_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on cloud connector id
        in: query
        name: cloud_connector_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on location
        in: query
        name: location
        schema:
          type: string
      - description: Filter on price
        in: query
        name: price
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_bucket_collection'
          description: List of cloud buckets.
      summary: Lists all cloud buckets from pool.
      tags:
      - cloud_buckets
  /pools/{pool_id}/cloud_buckets/{cloud_bucket_id}:
    get:
      description: '**API Key Scope**: cloud_buckets / show'
      operationId: show_cloud_bucket_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of cloud bucket.
        in: path
        name: cloud_bucket_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_bucket'
          description: A specific cloud bucket.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Displays a specific cloud bucket.
      tags:
      - cloud_buckets
    put:
      description: '**API Key Scope**: cloud_buckets / update'
      operationId: update_cloud_bucket_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of cloud bucket.
        in: path
        name: cloud_bucket_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloud_bucket'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_bucket'
          description: A specific cloud bucket.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Updates a specific cloud bucket.
      tags:
      - cloud_buckets
      x-codegen-request-body-name: cloud_bucket_body
  /pools/{pool_id}/cloud_buckets/{cloud_bucket_id}/mount:
    get:
      description: '**API Key Scope**: cloud_buckets / mount_status'
      operationId: mount_status_cloud_bucket_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of cloud bucket.
        in: path
        name: cloud_bucket_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Get mount status of Cloud bucket.
      tags:
      - cloud_buckets
  /cloud_buckets:
    get:
      description: '**API Key Scope**: cloud_buckets / index'
      operationId: index_cloud_buckets
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on cloud connector id
        in: query
        name: cloud_connector_id
        schema:
          type: string
      - description: Filter on a pool id
        in: query
        name: pool_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on location
        in: query
        name: location
        schema:
          type: string
      - description: Filter on price
        in: query
        name: price
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_bucket_collection'
          description: List of cloud buckets.
      summary: Lists all cloud buckets.
      tags:
      - cloud_buckets
  /cloud_buckets/{cloud_bucket_id}:
    get:
      description: '**API Key Scope**: cloud_buckets / show'
      operationId: show_cloud_bucket
      parameters:
      - description: Numeric ID or name of cloud bucket.
        in: path
        name: cloud_bucket_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_bucket'
          description: A specific cloud bucket.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Displays a specific cloud bucket.
      tags:
      - cloud_buckets
    put:
      description: '**API Key Scope**: cloud_buckets / update'
      operationId: update_cloud_bucket
      parameters:
      - description: Numeric ID or name of cloud bucket.
        in: path
        name: cloud_bucket_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloud_bucket'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloud_bucket'
          description: A specific cloud bucket.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Updates a specific cloud bucket.
      tags:
      - cloud_buckets
      x-codegen-request-body-name: cloud_bucket_body
  /cloud_buckets/{cloud_bucket_id}/mount:
    get:
      description: '**API Key Scope**: cloud_buckets / mount_status'
      operationId: mount_status_cloud_bucket
      parameters:
      - description: Numeric ID or name of cloud bucket.
        in: path
        name: cloud_bucket_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Get mount status of Cloud bucket.
      tags:
      - cloud_buckets
  /nas:
    get:
      description: '**API Key Scope**: nas / index'
      operationId: index_nas
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on comment
        in: query
        name: comment
        schema:
          type: string
      - description: Filter on host
        in: query
        name: host
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on price
        in: query
        name: price
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas_collection'
          description: List of NAS.
      summary: Lists all NAS.
      tags:
      - nas
    post:
      description: '**API Key Scope**: nas / create'
      operationId: create_nas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nas'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas'
          description: A specific NAS.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new NAS.
      tags:
      - nas
      x-codegen-request-body-name: nas_body
  /nas/{nas_id}:
    delete:
      description: '**API Key Scope**: nas / destroy'
      operationId: destroy_nas
      parameters:
      - description: Numeric ID or name of NAS.
        in: path
        name: nas_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: NAS destroyed.
      summary: Destroys a specific NAS.
      tags:
      - nas
    get:
      description: '**API Key Scope**: nas / show'
      operationId: show_nas
      parameters:
      - description: Numeric ID or name of NAS.
        in: path
        name: nas_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas'
          description: A specific NAS.
      summary: Displays a specific NAS.
      tags:
      - nas
    put:
      description: '**API Key Scope**: nas / update'
      operationId: update_nas
      parameters:
      - description: Numeric ID or name of NAS.
        in: path
        name: nas_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nas'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas'
          description: A specific NAS.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific NAS.
      tags:
      - nas
      x-codegen-request-body-name: nas_body
  /nas/{nas_id}/nas_shares:
    get:
      description: "**API Key Scope**: nas_shares / index  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: index_nas_shares_by_nas
      parameters:
      - description: Numeric ID or name of NAS.
        in: path
        name: nas_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on path
        in: query
        name: path
        schema:
          type: string
      - description: Filter on options
        in: query
        name: options
        schema:
          type: string
      - description: Filter on username
        in: query
        name: username
        schema:
          type: string
      - description: Filter on a pool id
        in: query
        name: pool_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas_share_collection'
          description: List of NAS shares.
      summary: Lists all NAS shares.
      tags:
      - nas_shares
    post:
      description: '**API Key Scope**: nas_shares / create'
      operationId: create_nas_share_by_nas
      parameters:
      - description: Numeric ID or name of NAS.
        in: path
        name: nas_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nas_share'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas_share'
          description: A specific NAS share.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new NAS share.
      tags:
      - nas_shares
      x-codegen-request-body-name: nas_share_body
  /nas/{nas_id}/nas_shares/-/test:
    get:
      description: '**API Key Scope**: nas_shares / test'
      operationId: test_result_nas_share
      parameters:
      - description: Numeric ID or name of NAS.
        in: path
        name: nas_id
        required: true
        schema:
          type: string
      - description: ID of active job
        in: query
        name: job_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Check result of a NAS Share test job.
      tags:
      - nas_shares
    put:
      description: '**API Key Scope**: nas_shares / test'
      operationId: test_nas_share
      parameters:
      - description: Numeric ID or name of NAS.
        in: path
        name: nas_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nas_share'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Test an unsaved NAS Share.
      tags:
      - nas_shares
      x-codegen-request-body-name: nas_share_body
  /nas/{nas_id}/nas_shares/{nas_share_id}:
    delete:
      description: '**API Key Scope**: nas_shares / destroy'
      operationId: destroy_nas_share_by_nas
      parameters:
      - description: Numeric ID or name of NAS.
        in: path
        name: nas_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: NAS share destroyed.
      summary: Destroys a specific NAS share.
      tags:
      - nas_shares
    get:
      description: "**API Key Scope**: nas_shares / show  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: show_nas_share_by_nas
      parameters:
      - description: Numeric ID or name of NAS.
        in: path
        name: nas_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas_share'
          description: A specific NAS share.
      summary: Displays a specific NAS share.
      tags:
      - nas_shares
    put:
      description: '**API Key Scope**: nas_shares / update'
      operationId: update_nas_share_by_nas
      parameters:
      - description: Numeric ID or name of NAS.
        in: path
        name: nas_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nas_share'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas_share'
          description: A specific NAS share.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific NAS share.
      tags:
      - nas_shares
      x-codegen-request-body-name: nas_share_body
  /nas/{nas_id}/nas_shares/{nas_share_id}/mount:
    get:
      description: '**API Key Scope**: nas_shares / mount_status'
      operationId: mount_status_nas_share_by_nas
      parameters:
      - description: Numeric ID or name of NAS.
        in: path
        name: nas_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Get mount status of NAS Share.
      tags:
      - nas_shares
  /nas_shares:
    get:
      description: "**API Key Scope**: nas_shares / index  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: index_nas_shares
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on path
        in: query
        name: path
        schema:
          type: string
      - description: Filter on options
        in: query
        name: options
        schema:
          type: string
      - description: Filter on username
        in: query
        name: username
        schema:
          type: string
      - description: Filter on NAS id
        in: query
        name: nas_id
        schema:
          type: string
      - description: Filter on a pool id
        in: query
        name: pool_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas_share_collection'
          description: List of NAS shares.
      summary: Lists all NAS shares.
      tags:
      - nas_shares
  /nas_shares/{nas_share_id}:
    delete:
      description: '**API Key Scope**: nas_shares / destroy'
      operationId: destroy_nas_share
      parameters:
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: NAS share destroyed.
      summary: Destroys a specific NAS share.
      tags:
      - nas_shares
    get:
      description: "**API Key Scope**: nas_shares / show  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: show_nas_share
      parameters:
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas_share'
          description: A specific NAS share.
      summary: Displays a specific NAS share.
      tags:
      - nas_shares
    put:
      description: '**API Key Scope**: nas_shares / update'
      operationId: update_nas_share
      parameters:
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nas_share'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas_share'
          description: A specific NAS share.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific NAS share.
      tags:
      - nas_shares
      x-codegen-request-body-name: nas_share_body
  /nas_shares/{nas_share_id}/mount:
    get:
      description: '**API Key Scope**: nas_shares / mount_status'
      operationId: mount_status_nas_share
      parameters:
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Get mount status of NAS Share.
      tags:
      - nas_shares
  /pools/{pool_id}/nas_shares:
    get:
      description: "**API Key Scope**: nas_shares / index  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: index_nas_shares_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on path
        in: query
        name: path
        schema:
          type: string
      - description: Filter on options
        in: query
        name: options
        schema:
          type: string
      - description: Filter on username
        in: query
        name: username
        schema:
          type: string
      - description: Filter on NAS id
        in: query
        name: nas_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas_share_collection'
          description: List of NAS shares.
      summary: Lists all NAS shares from pool.
      tags:
      - nas_shares
  /pools/{pool_id}/nas_shares/{nas_share_id}:
    delete:
      description: '**API Key Scope**: nas_shares / destroy'
      operationId: destroy_nas_share_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: NAS share destroyed.
      summary: Destroys a specific NAS share.
      tags:
      - nas_shares
    get:
      description: "**API Key Scope**: nas_shares / show  \nOptional API Key Explicit\
        \ Scope: nas_shares / get_password"
      operationId: show_nas_share_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas_share'
          description: A specific NAS share.
      summary: Displays a specific NAS share.
      tags:
      - nas_shares
    put:
      description: '**API Key Scope**: nas_shares / update'
      operationId: update_nas_share_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nas_share'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nas_share'
          description: A specific NAS share.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific NAS share.
      tags:
      - nas_shares
      x-codegen-request-body-name: nas_share_body
  /pools/{pool_id}/nas_shares/{nas_share_id}/mount:
    get:
      description: '**API Key Scope**: nas_shares / mount_status'
      operationId: mount_status_nas_share_by_pool
      parameters:
      - description: Numeric ID, or name of pool.
        in: path
        name: pool_id
        required: true
        schema:
          type: string
      - description: Numeric ID or name of NAS share.
        in: path
        name: nas_share_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mount_status'
          description: Mount status of storage.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Get mount status of NAS Share.
      tags:
      - nas_shares
  /tasks:
    get:
      description: '**API Key Scope**: tasks / index'
      operationId: index_tasks
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on comment
        in: query
        name: comment
        schema:
          type: string
      - description: Filter on task workflow type
        in: query
        name: workflow_type
        schema:
          type: string
      - description: Filter on task workflow action
        in: query
        name: workflow_action
        schema:
          type: string
      - description: Filter on task source type
        in: query
        name: source_type
        schema:
          type: string
      - description: Filter on task destination type
        in: query
        name: destination_type
        schema:
          type: string
      - description: Filter on priority
        in: query
        name: priority
        schema:
          type: string
      - description: Filter on conflict resolution
        in: query
        name: conflict_resolution
        schema:
          type: string
      - description: Filter on action
        in: query
        name: action
        schema:
          type: string
      - description: Filter on activate
        in: query
        name: activate
        schema:
          type: string
      - description: Filter on creation date
        in: query
        name: creation_date
        schema:
          type: string
      - description: Filter on creation username
        in: query
        name: creation_username
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on modification username
        in: query
        name: modification_username
        schema:
          type: string
      - description: Filter on job started
        in: query
        name: job_started
        schema:
          type: string
      - description: Filter on job finished
        in: query
        name: job_finished
        schema:
          type: string
      - description: Filter on status
        in: query
        name: status
        schema:
          type: string
      - description: Filter on processed size
        in: query
        name: processed_size
        schema:
          type: string
      - description: Filter on to process size
        in: query
        name: to_process_size
        schema:
          type: string
      - description: Filter on task source pool id
        in: query
        name: source_pool_id
        schema:
          type: string
      - description: Filter on task source pool name
        in: query
        name: source_pool_name
        schema:
          type: string
      - description: Filter on task source tape id
        in: query
        name: source_tape_id
        schema:
          type: string
      - description: Filter on task source tape barcode
        in: query
        name: source_tape_barcode
        schema:
          type: string
      - description: Filter on task destination pool id
        in: query
        name: destination_pool_id
        schema:
          type: string
      - description: Filter on task destination pool name
        in: query
        name: destination_pool_name
        schema:
          type: string
      - description: Filter on task destination tape id
        in: query
        name: destination_tape_id
        schema:
          type: string
      - description: Filter on task destination tape barcode
        in: query
        name: destination_tape_barcode
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_collection'
          description: List of tasks.
      summary: Lists all tasks.
      tags:
      - tasks
    post:
      description: |
        **API Key Scope**: tasks / create
      operationId: create_task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
          description: A specific task.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new task.
      tags:
      - tasks
      x-codegen-request-body-name: task_body
  /tasks/{task_id}:
    delete:
      description: '**API Key Scope**: tasks / destroy'
      operationId: destroy_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Task destroyed.
      summary: Destroys a specific task.
      tags:
      - tasks
    get:
      description: '**API Key Scope**: tasks / show'
      operationId: show_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
          description: A specific task.
      summary: Displays a specific task.
      tags:
      - tasks
    put:
      description: '**API Key Scope**: tasks / update'
      operationId: update_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
          description: A specific task.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific task.
      tags:
      - tasks
      x-codegen-request-body-name: task_body
  /tasks/{task_id}/action/run:
    get:
      description: '**API Key Scope**: tasks / action'
      operationId: run_task_result
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: ID of active job
        in: query
        name: job_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Check result of a task run request.
      tags:
      - tasks
    put:
      description: '**API Key Scope**: tasks / action'
      operationId: run_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Run a task.
      tags:
      - tasks
  /tasks/{task_id}/action/pause:
    get:
      description: '**API Key Scope**: tasks / action'
      operationId: pause_task_result
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: ID of active job
        in: query
        name: job_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Check result of a task pause request.
      tags:
      - tasks
    put:
      description: '**API Key Scope**: tasks / action'
      operationId: pause_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Pause a task.
      tags:
      - tasks
  /tasks/{task_id}/action/stop:
    get:
      description: '**API Key Scope**: tasks / action'
      operationId: stop_task_result
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: ID of active job
        in: query
        name: job_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Check result of a task stop request.
      tags:
      - tasks
    put:
      description: '**API Key Scope**: tasks / action'
      operationId: stop_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Stop a task.
      tags:
      - tasks
  /tasks/{task_id}/action/resume:
    get:
      description: '**API Key Scope**: tasks / action'
      operationId: resume_task_result
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: ID of active job
        in: query
        name: job_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Check result of a task resume request.
      tags:
      - tasks
    put:
      description: '**API Key Scope**: tasks / action'
      operationId: resume_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Resume a task.
      tags:
      - tasks
  /tasks/{task_id}/files:
    get:
      description: '**API Key Scope**: files / index'
      operationId: index_files_by_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files on root.
      tags:
      - files
  /tasks/{task_id}/files/{file_id}:
    get:
      description: '**API Key Scope**: files / show'
      operationId: show_file_by_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_with_path'
          description: A specific file.
      summary: Displays a specific file.
      tags:
      - files
  /tasks/{task_id}/files/{file_id}/tapes:
    get:
      description: '**API Key Scope**: files / tapes'
      operationId: index_tapes_by_file_by_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_collection'
          description: List of tapes.
      summary: Displays tapes containing specific file, related to the specific task.
      tags:
      - files
  /tasks/{task_id}/files/{file_parent_id}/children:
    get:
      description: '**API Key Scope**: files / index'
      operationId: files_children_by_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of parent folder.
        in: path
        name: file_parent_id
        required: true
        schema:
          type: integer
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files under a specific folder.
      tags:
      - files
  /tasks/{task_id}/task_sources:
    get:
      description: '**API Key Scope**: task_sources / index'
      operationId: index_task_sources
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on import file id
        in: query
        name: import_file_id
        schema:
          type: string
      - description: Filter on tape id
        in: query
        name: tape_id
        schema:
          type: string
      - description: Filter on a pool id
        in: query
        name: pool_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_source_collection'
          description: List of task sources.
      summary: Lists all task sources.
      tags:
      - task_sources
    post:
      description: '**API Key Scope**: task_sources / create'
      operationId: create_task_source
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_source_up'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_source_down'
          description: A specific task source.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new task source.
      tags:
      - task_sources
      x-codegen-request-body-name: task_source_body
  /tasks/{task_id}/task_sources/{task_source_id}:
    delete:
      description: '**API Key Scope**: task_sources / destroy'
      operationId: destroy_task_source
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task source.
        in: path
        name: task_source_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Task source destroyed.
      summary: Destroys a specific task source.
      tags:
      - task_sources
    get:
      description: '**API Key Scope**: task_sources / show'
      operationId: show_task_source
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task source.
        in: path
        name: task_source_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_source_down'
          description: A specific task source.
      summary: Displays a specific task source.
      tags:
      - task_sources
    put:
      description: '**API Key Scope**: task_sources / update'
      operationId: update_task_source
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task source.
        in: path
        name: task_source_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_source_up'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_source_down'
          description: A specific task source.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific task source.
      tags:
      - task_sources
      x-codegen-request-body-name: task_source_body
  /tasks/{task_id}/task_destinations:
    get:
      description: '**API Key Scope**: task_destinations / index'
      operationId: index_task_destinations
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on folder id
        in: query
        name: folder_id
        schema:
          type: string
      - description: Filter on tape id
        in: query
        name: tape_id
        schema:
          type: string
      - description: Filter on a pool id
        in: query
        name: pool_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_destination_collection'
          description: List of task destinations.
      summary: Lists all task destinations.
      tags:
      - task_destinations
    post:
      description: '**API Key Scope**: task_destinations / create'
      operationId: create_task_destination
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_destination_up'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_destination_down'
          description: A specific task destination.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new task destination.
      tags:
      - task_destinations
      x-codegen-request-body-name: task_destination_body
  /tasks/{task_id}/task_destinations/{task_destination_id}:
    delete:
      description: '**API Key Scope**: task_destinations / destroy'
      operationId: destroy_task_destination
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task destination.
        in: path
        name: task_destination_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Task destination destroyed.
      summary: Destroys a specific task destination.
      tags:
      - task_destinations
    get:
      description: '**API Key Scope**: task_destinations / show'
      operationId: show_task_destination
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task destination.
        in: path
        name: task_destination_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_destination_down'
          description: A specific task destination.
      summary: Displays a specific task destination.
      tags:
      - task_destinations
    put:
      description: '**API Key Scope**: task_destinations / update'
      operationId: update_task_destination
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task destination.
        in: path
        name: task_destination_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_destination_up'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_destination_down'
          description: A specific task destination.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific task destination.
      tags:
      - task_destinations
      x-codegen-request-body-name: task_destination_body
  /task_schedules:
    get:
      description: '**API Key Scope**: task_schedules / index'
      operationId: index_task_schedules
      parameters:
      - description: Display the next scheduled date, and information about missing
          executions.
        in: query
        name: with_next
        schema:
          default: true
          type: boolean
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on RRule of schedule
        in: query
        name: rrule
        schema:
          type: string
      - description: Filter on done schedule
        in: query
        name: done
        schema:
          type: string
      - description: Filter on task id
        in: query
        name: task_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_schedule_collection'
          description: List of task schedules.
      summary: Lists all task schedules.
      tags:
      - task_schedules
  /tasks/{task_id}/task_schedule:
    delete:
      description: '**API Key Scope**: task_schedules / destroy'
      operationId: destroy_task_schedule
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Task schedule destroyed.
      summary: Destroys the task schedule.
      tags:
      - task_schedules
    get:
      description: '**API Key Scope**: task_schedules / show'
      operationId: show_task_schedule
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_schedule'
          description: A specific task schedule.
      summary: Displays the task schedule.
      tags:
      - task_schedules
    post:
      description: '**API Key Scope**: task_schedules / create'
      operationId: create_task_schedule
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_schedule'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_schedule'
          description: A specific task schedule.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new task schedule. Only one should be created.
      tags:
      - task_schedules
      x-codegen-request-body-name: task_schedule_body
    put:
      description: '**API Key Scope**: task_schedules / update'
      operationId: update_task_schedule
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_schedule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_schedule'
          description: A specific task schedule.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates the existing task schedule.
      tags:
      - task_schedules
      x-codegen-request-body-name: task_schedule_body
  /tasks/{task_id}/task_options:
    get:
      description: '**API Key Scope**: task_options / index'
      operationId: index_task_options
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on value
        in: query
        name: value
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_option_collection'
          description: List of task options.
      summary: Lists all task options.
      tags:
      - task_options
    post:
      description: '**API Key Scope**: task_options / create'
      operationId: create_task_option
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_option'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_option'
          description: A specific task option.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new task option.
      tags:
      - task_options
      x-codegen-request-body-name: task_option_body
  /tasks/{task_id}/task_options/{task_option_id}:
    delete:
      description: '**API Key Scope**: task_options / destroy'
      operationId: destroy_task_option
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task option.
        in: path
        name: task_option_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Task option destroyed.
      summary: Destroys a specific task option.
      tags:
      - task_options
    get:
      description: '**API Key Scope**: task_options / show'
      operationId: show_task_option
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task option.
        in: path
        name: task_option_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_option'
          description: A specific task option.
      summary: Displays a specific task option.
      tags:
      - task_options
    put:
      description: '**API Key Scope**: task_options / update'
      operationId: update_task_option
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task option.
        in: path
        name: task_option_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_option'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_option'
          description: A specific task option.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific task option.
      tags:
      - task_options
      x-codegen-request-body-name: task_option_body
  /tasks/{task_id}/task_callbacks:
    get:
      description: '**API Key Scope**: task_callbacks / index'
      operationId: index_task_callbacks
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on task callback script
        in: query
        name: script
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_callback_collection'
          description: List of task callbacks.
      summary: Lists all task callbacks.
      tags:
      - task_callbacks
    post:
      description: '**API Key Scope**: task_callbacks / create'
      operationId: create_task_callback
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_callback'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_callback'
          description: A specific task callback.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new task callback.
      tags:
      - task_callbacks
      x-codegen-request-body-name: task_callback_body
  /tasks/{task_id}/task_callbacks/{task_callback_id}:
    delete:
      description: '**API Key Scope**: task_callbacks / destroy'
      operationId: destroy_task_callback
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task callback.
        in: path
        name: task_callback_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Task callback destroyed.
      summary: Destroys a specific task callback.
      tags:
      - task_callbacks
    get:
      description: '**API Key Scope**: task_callbacks / show'
      operationId: show_task_callback
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task callback.
        in: path
        name: task_callback_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_callback'
          description: A specific task callback.
      summary: Displays a specific task callback.
      tags:
      - task_callbacks
    put:
      description: '**API Key Scope**: task_callbacks / update'
      operationId: update_task_callback
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task callback.
        in: path
        name: task_callback_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_callback'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_callback'
          description: A specific task callback.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific task callback.
      tags:
      - task_callbacks
      x-codegen-request-body-name: task_callback_body
  /tasks/{task_id}/task_metadata:
    get:
      description: '**API Key Scope**: task_metadata / index'
      operationId: index_task_metadata
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on key
        in: query
        name: key
        schema:
          type: string
      - description: Filter on value
        in: query
        name: value
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_metadatum_collection'
          description: List of task metadata.
      summary: Lists all task metadata.
      tags:
      - task_metadata
    post:
      description: '**API Key Scope**: task_metadata / create'
      operationId: create_task_metadatum
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_metadatum'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_metadatum'
          description: A specific task metadatum.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Creates a new task metadatum.
      tags:
      - task_metadata
      x-codegen-request-body-name: task_metadatum_body
  /tasks/{task_id}/task_metadata/{task_metadatum_id}:
    delete:
      description: '**API Key Scope**: task_metadata / destroy'
      operationId: destroy_task_metadatum
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task metadatum.
        in: path
        name: task_metadatum_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content: {}
          description: Task metadatum destroyed.
      summary: Destroys a specific task metadatum.
      tags:
      - task_metadata
    get:
      description: '**API Key Scope**: task_metadata / show'
      operationId: show_task_metadatum
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task metadatum.
        in: path
        name: task_metadatum_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_metadatum'
          description: A specific task metadatum.
      summary: Displays a specific task metadatum.
      tags:
      - task_metadata
    put:
      description: '**API Key Scope**: task_metadata / update'
      operationId: update_task_metadatum
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task metadatum.
        in: path
        name: task_metadatum_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task_metadatum'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_metadatum'
          description: A specific task metadatum.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The received resource was not correctly formatted.
      summary: Updates a specific task metadatum.
      tags:
      - task_metadata
      x-codegen-request-body-name: task_metadatum_body
  /tasks/{task_id}/task_executions:
    get:
      description: '**API Key Scope**: task_executions / index'
      operationId: index_task_executions_by_task
      parameters:
      - description: Filter on task id
        in: query
        name: task_id
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on task workflow type
        in: query
        name: workflow_type
        schema:
          type: string
      - description: Filter on task workflow action
        in: query
        name: workflow_action
        schema:
          type: string
      - description: Filter on task source type
        in: query
        name: source_type
        schema:
          type: string
      - description: Filter on task destination type
        in: query
        name: destination_type
        schema:
          type: string
      - description: Filter on status
        in: query
        name: status
        schema:
          type: string
      - description: Filter on log time
        in: query
        name: log_time
        schema:
          type: string
      - description: Filter on job started
        in: query
        name: job_started
        schema:
          type: string
      - description: Filter on job finished
        in: query
        name: job_finished
        schema:
          type: string
      - description: Filter on to process size
        in: query
        name: to_process_size
        schema:
          type: string
      - description: Filter on processed size
        in: query
        name: processed_size
        schema:
          type: string
      - description: Filter on to process files
        in: query
        name: to_process_files
        schema:
          type: string
      - description: Filter on processed files
        in: query
        name: processed_files
        schema:
          type: string
      - description: Filter on finalized files
        in: query
        name: finalized_files
        schema:
          type: string
      - description: Filter on estimation time
        in: query
        name: estimation_time
        schema:
          type: string
      - description: Filter on bandwidth
        in: query
        name: bandwidth
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_execution_collection'
          description: List of task executions.
      summary: Lists all task executions.
      tags:
      - task_executions
  /tasks/{task_id}/task_executions/{task_execution_id}:
    get:
      description: '**API Key Scope**: task_executions / show'
      operationId: show_task_execution_by_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task execution.
        in: path
        name: task_execution_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_execution'
          description: A specific task execution.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Displays a specific task execution.
      tags:
      - task_executions
  /tasks/{task_id}/task_executions/{task_execution_id}/files:
    get:
      description: '**API Key Scope**: files / index'
      operationId: index_files_by_task_execution_by_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task execution.
        in: path
        name: task_execution_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files on root.
      tags:
      - files
  /tasks/{task_id}/task_executions/{task_execution_id}/files/{file_id}:
    get:
      description: '**API Key Scope**: files / show'
      operationId: show_file_by_task_execution_by_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task execution.
        in: path
        name: task_execution_id
        required: true
        schema:
          type: string
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_with_path'
          description: A specific file.
      summary: Displays a specific file.
      tags:
      - files
  /tasks/{task_id}/task_executions/{task_execution_id}/files/{file_id}/tapes:
    get:
      description: '**API Key Scope**: files / tapes'
      operationId: index_tapes_by_file_by_task_execution_by_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task execution.
        in: path
        name: task_execution_id
        required: true
        schema:
          type: string
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_collection'
          description: List of tapes.
      summary: Displays tapes containing specific file, related to the specific task.
      tags:
      - files
  /tasks/{task_id}/task_executions/{task_execution_id}/files/{file_parent_id}/children:
    get:
      description: '**API Key Scope**: files / index'
      operationId: files_children_by_task_execution_by_task
      parameters:
      - description: Numeric ID or name of task. Task names are not unique, it's recommanded
          to use numeric ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Numeric ID of task execution.
        in: path
        name: task_execution_id
        required: true
        schema:
          type: string
      - description: Numeric ID of parent folder.
        in: path
        name: file_parent_id
        required: true
        schema:
          type: integer
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files under a specific folder.
      tags:
      - files
  /task_executions:
    get:
      description: '**API Key Scope**: task_executions / index'
      operationId: index_task_executions
      parameters:
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: |-
          Sort results by attribute.

          Can sort on multiple attributes, separated by `|`.
          Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
        in: query
        name: sort_by
        schema:
          items:
            type: string
          type: array
        style: pipeDelimited
      - description: If `false`, only includes the last correct execution of a task.
        in: query
        name: complete_list
        schema:
          default: true
          type: boolean
      - description: Filter on id
        in: query
        name: id
        schema:
          type: string
      - description: Filter on task id
        in: query
        name: task_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on task workflow type
        in: query
        name: workflow_type
        schema:
          type: string
      - description: Filter on task workflow action
        in: query
        name: workflow_action
        schema:
          type: string
      - description: Filter on task source type
        in: query
        name: source_type
        schema:
          type: string
      - description: Filter on task destination type
        in: query
        name: destination_type
        schema:
          type: string
      - description: Filter on status
        in: query
        name: status
        schema:
          type: string
      - description: Filter on log time
        in: query
        name: log_time
        schema:
          type: string
      - description: Filter on job started
        in: query
        name: job_started
        schema:
          type: string
      - description: Filter on job finished
        in: query
        name: job_finished
        schema:
          type: string
      - description: Filter on creation date
        in: query
        name: creation_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on to process size
        in: query
        name: to_process_size
        schema:
          type: string
      - description: Filter on processed size
        in: query
        name: processed_size
        schema:
          type: string
      - description: Filter on to process files
        in: query
        name: to_process_files
        schema:
          type: string
      - description: Filter on processed files
        in: query
        name: processed_files
        schema:
          type: string
      - description: Filter on finalized files
        in: query
        name: finalized_files
        schema:
          type: string
      - description: Filter on estimation time
        in: query
        name: estimation_time
        schema:
          type: string
      - description: Filter on bandwidth
        in: query
        name: bandwidth
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_execution_collection'
          description: List of task executions.
      summary: Lists all task executions.
      tags:
      - task_executions
  /task_executions/{task_execution_id}:
    get:
      description: '**API Key Scope**: task_executions / show'
      operationId: show_task_execution
      parameters:
      - description: Numeric ID of task execution.
        in: path
        name: task_execution_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task_execution'
          description: A specific task execution.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: The requested resource was not found. The detailed error will
            be of type `not_found`.
      summary: Displays a specific task execution.
      tags:
      - task_executions
  /task_executions/{task_execution_id}/files:
    get:
      description: '**API Key Scope**: files / index'
      operationId: index_files_by_task_execution
      parameters:
      - description: Numeric ID of task execution.
        in: path
        name: task_execution_id
        required: true
        schema:
          type: string
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files on root.
      tags:
      - files
  /task_executions/{task_execution_id}/files/{file_id}:
    get:
      description: '**API Key Scope**: files / show'
      operationId: show_file_by_task_execution
      parameters:
      - description: Numeric ID of task execution.
        in: path
        name: task_execution_id
        required: true
        schema:
          type: string
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_with_path'
          description: A specific file.
      summary: Displays a specific file.
      tags:
      - files
  /task_executions/{task_execution_id}/files/{file_id}/tapes:
    get:
      description: '**API Key Scope**: files / tapes'
      operationId: index_tapes_by_file_by_task_execution
      parameters:
      - description: Numeric ID of task execution.
        in: path
        name: task_execution_id
        required: true
        schema:
          type: string
      - description: Numeric ID of file.
        in: path
        name: file_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tape_collection'
          description: List of tapes.
      summary: Displays tapes containing specific file, related to the specific task.
      tags:
      - files
  /task_executions/{task_execution_id}/files/{file_parent_id}/children:
    get:
      description: '**API Key Scope**: files / index'
      operationId: files_children_by_task_execution
      parameters:
      - description: Numeric ID of task execution.
        in: path
        name: task_execution_id
        required: true
        schema:
          type: string
      - description: Numeric ID of parent folder.
        in: path
        name: file_parent_id
        required: true
        schema:
          type: integer
      - description: The number of items to display for pagination.
        in: query
        name: limit
        schema:
          type: integer
      - description: The number of items to skip for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter on file id
        in: query
        name: file_id
        schema:
          type: string
      - description: Filter on name
        in: query
        name: name
        schema:
          type: string
      - description: Filter on type
        in: query
        name: type
        schema:
          type: string
      - description: Filter on permission
        in: query
        name: permission
        schema:
          type: string
      - description: Filter on size
        in: query
        name: size
        schema:
          type: string
      - description: Filter on change date
        in: query
        name: change_date
        schema:
          type: string
      - description: Filter on modification date
        in: query
        name: modification_date
        schema:
          type: string
      - description: Filter on access date
        in: query
        name: access_date
        schema:
          type: string
      - description: Filter on gid
        in: query
        name: gid
        schema:
          type: string
      - description: Filter on uid
        in: query
        name: uid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nodeum_file_collection'
          description: List of files.
      summary: Lists files under a specific folder.
      tags:
      - files
  /systems/download_traces:
    get:
      description: '**API Key Scope**: systems / download_traces'
      operationId: result_download_traces
      parameters:
      - description: ID of active job
        in: query
        name: job_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
            application/tar+gzip:
              schema:
                format: binary
                type: string
          description: A completed job for downloading traces.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            application/tar+gzip:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Check result of a download traces job.
      tags:
      - systems
    put:
      description: '**API Key Scope**: systems / download_traces'
      operationId: trigger_download_traces
      parameters:
      - description: Type of traces to download
        in: query
        name: type
        required: true
        schema:
          enum:
          - interface
          - core
          - data_mining
          - fuse
          - library_manager
          - manager
          - watchdog
          - system
          - all
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_job_status'
            queued:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: queued
            working:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: working
                  progress: 2
                  total: 6
            failed:
              example:
                value:
                  job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
                  status: failed
          description: An active job that may be queued, working, completed or failed.
      summary: Trigger a download traces request.
      tags:
      - systems
  /statistics/by_primary_name:
    get:
      description: '**API Key Scope**: statistics / by_primary_name'
      operationId: statistics_by_primary_name
      parameters:
      - description: Solr query
        in: query
        name: q
        schema:
          type: string
      - description: Type of date to facet on
        in: query
        name: date_attr
        schema:
          enum:
          - file_change_date
          - file_modification_date
          - file_access_date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/by_primary_facet'
      summary: TODO
      tags:
      - statistics
  /statistics/by_secondary_storage:
    get:
      description: '**API Key Scope**: statistics / by_secondary_storage'
      operationId: statistics_by_secondary_storage
      parameters:
      - description: Solr query
        in: query
        name: q
        schema:
          type: string
      - description: Type of date to facet on
        in: query
        name: date_attr
        schema:
          enum:
          - file_change_date
          - file_modification_date
          - file_access_date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/by_secondary_facet'
      summary: TODO
      tags:
      - statistics
  /statistics/by_user_owner:
    get:
      description: '**API Key Scope**: statistics / by_user_owner'
      operationId: statistics_by_user_owner
      parameters:
      - description: Solr query
        in: query
        name: q
        schema:
          type: string
      - description: Type of date to facet on
        in: query
        name: date_attr
        schema:
          enum:
          - file_change_date
          - file_modification_date
          - file_access_date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/by_user_owner_facet'
      summary: TODO
      tags:
      - statistics
  /statistics/by_group_owner:
    get:
      description: '**API Key Scope**: statistics / by_group_owner'
      operationId: statistics_by_group_owner
      parameters:
      - description: Solr query
        in: query
        name: q
        schema:
          type: string
      - description: Type of date to facet on
        in: query
        name: date_attr
        schema:
          enum:
          - file_change_date
          - file_modification_date
          - file_access_date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/by_group_owner_facet'
      summary: TODO
      tags:
      - statistics
  /statistics/by_file_extension:
    get:
      description: '**API Key Scope**: statistics / by_file_extension'
      operationId: statistics_by_file_extension
      parameters:
      - description: Solr query
        in: query
        name: q
        schema:
          type: string
      - description: Type of date to facet on
        in: query
        name: date_attr
        schema:
          enum:
          - file_change_date
          - file_modification_date
          - file_access_date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/by_file_extension_facet'
      summary: TODO
      tags:
      - statistics
  /statistics/by_size:
    get:
      description: '**API Key Scope**: statistics / by_size'
      operationId: statistics_by_size
      parameters:
      - description: Solr query
        in: query
        name: q
        schema:
          type: string
      - description: Type of date to facet on
        in: query
        name: date_attr
        schema:
          enum:
          - file_change_date
          - file_modification_date
          - file_access_date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/by_size_facet'
      summary: TODO
      tags:
      - statistics
  /systems/reset/generate_vars:
    post:
      operationId: download_reset_vars
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reset'
        required: true
      responses:
        "200":
          content:
            application/x-yaml:
              schema:
                format: binary
                type: string
          description: The var file created
      summary: Creates a YAML file with selected tables and downloads it
      tags:
      - systems
      x-codegen-request-body-name: reset_form
components:
  parameters:
    limit:
      description: The number of items to display for pagination.
      in: query
      name: limit
      schema:
        type: integer
    offset:
      description: The number of items to skip for pagination.
      in: query
      name: offset
      schema:
        type: integer
    sort_by:
      description: |-
        Sort results by attribute.

        Can sort on multiple attributes, separated by `|`.
        Order direction can be suffixing the attribute by either `:asc` (default) or `:desc`.
      in: query
      name: sort_by
      schema:
        items:
          type: string
        type: array
      style: pipeDelimited
    job_id:
      description: ID of active job
      in: query
      name: job_id
      required: true
      schema:
        type: string
    download_traces_type:
      description: Type of traces to download
      in: query
      name: type
      required: true
      schema:
        enum:
        - interface
        - core
        - data_mining
        - fuse
        - library_manager
        - manager
        - watchdog
        - system
        - all
        type: string
    complete_list:
      description: If `false`, only includes the last correct execution of a task.
      in: query
      name: complete_list
      schema:
        default: true
        type: boolean
    filter_id:
      description: Filter on id
      in: query
      name: id
      schema:
        type: string
    filter_name:
      description: Filter on name
      in: query
      name: name
      schema:
        type: string
    filter_type:
      description: Filter on type
      in: query
      name: type
      schema:
        type: string
    filter_comment:
      description: Filter on comment
      in: query
      name: comment
      schema:
        type: string
    filter_access_date:
      description: Filter on access date
      in: query
      name: access_date
      schema:
        type: string
    filter_access_key:
      description: Filter on access key
      in: query
      name: access_key
      schema:
        type: string
    filter_acs:
      description: Filter on acs
      in: query
      name: acs
      schema:
        type: string
    filter_action:
      description: Filter on action
      in: query
      name: action
      schema:
        type: string
    filter_activate:
      description: Filter on activate
      in: query
      name: activate
      schema:
        type: string
    filter_bandwidth:
      description: Filter on bandwidth
      in: query
      name: bandwidth
      schema:
        type: string
    filter_barcode:
      description: Filter on barcode
      in: query
      name: barcode
      schema:
        type: string
    filter_change_date:
      description: Filter on change date
      in: query
      name: change_date
      schema:
        type: string
    filter_cleaning:
      description: Filter on cleaning
      in: query
      name: cleaning
      schema:
        type: string
    filter_cloud_connector_id:
      description: Filter on cloud connector id
      in: query
      name: cloud_connector_id
      schema:
        type: string
    filter_pool_id:
      description: Filter on a pool id
      in: query
      name: pool_id
      schema:
        type: string
    filter_conflict_resolution:
      description: Filter on conflict resolution
      in: query
      name: conflict_resolution
      schema:
        type: string
    filter_content:
      description: Filter on content
      in: query
      name: content
      schema:
        type: string
    filter_creation_date:
      description: Filter on creation date
      in: query
      name: creation_date
      schema:
        type: string
    filter_creation_username:
      description: Filter on creation username
      in: query
      name: creation_username
      schema:
        type: string
    filter_date_in:
      description: Filter on date in
      in: query
      name: date_in
      schema:
        type: string
    filter_date_move:
      description: Filter on date move
      in: query
      name: date_move
      schema:
        type: string
    filter_device:
      description: Filter on device
      in: query
      name: device
      schema:
        type: string
    filter_ejected:
      description: Filter on ejected
      in: query
      name: ejected
      schema:
        type: string
    filter_estimation_time:
      description: Filter on estimation time
      in: query
      name: estimation_time
      schema:
        type: string
    filter_file_id:
      description: Filter on file id
      in: query
      name: file_id
      schema:
        type: string
    filter_finalized_files:
      description: Filter on finalized files
      in: query
      name: finalized_files
      schema:
        type: string
    filter_firmware:
      description: Filter on firmware
      in: query
      name: firmware
      schema:
        type: string
    filter_folder_id:
      description: Filter on folder id
      in: query
      name: folder_id
      schema:
        type: string
    filter_force_import_type:
      description: Filter on force import type
      in: query
      name: force_import_type
      schema:
        type: string
    filter_free:
      description: Filter on free
      in: query
      name: free
      schema:
        type: string
    filter_full:
      description: Filter on full
      in: query
      name: full
      schema:
        type: string
    filter_gid:
      description: Filter on gid
      in: query
      name: gid
      schema:
        type: string
    filter_guest_right:
      description: Filter on guest right
      in: query
      name: guest_right
      schema:
        type: string
    filter_hash:
      description: Filter on hash
      in: query
      name: hash
      schema:
        type: string
    filter_host:
      description: Filter on host
      in: query
      name: host
      schema:
        type: string
    filter_import_file_id:
      description: Filter on import file id
      in: query
      name: import_file_id
      schema:
        type: string
    filter_io_slots:
      description: Filter on io slots
      in: query
      name: io_slots
      schema:
        type: string
    filter_io_slots_address:
      description: Filter on io slots address
      in: query
      name: io_slots_address
      schema:
        type: string
    filter_job_finished:
      description: Filter on job finished
      in: query
      name: job_finished
      schema:
        type: string
    filter_job_started:
      description: Filter on job started
      in: query
      name: job_started
      schema:
        type: string
    filter_key:
      description: Filter on key
      in: query
      name: key
      schema:
        type: string
    filter_known:
      description: Filter on known
      in: query
      name: known
      schema:
        type: string
    filter_last_maintenance:
      description: Filter on last maintenance
      in: query
      name: last_maintenance
      schema:
        type: string
    filter_last_repack:
      description: Filter on last repack
      in: query
      name: last_repack
      schema:
        type: string
    filter_last_size_update:
      description: Filter on last size update
      in: query
      name: last_size_update
      schema:
        type: string
    filter_last_update:
      description: Filter on last update
      in: query
      name: last_update
      schema:
        type: string
    filter_libso:
      description: Filter on libso
      in: query
      name: libso
      schema:
        type: string
    filter_location:
      description: Filter on location
      in: query
      name: location
      schema:
        type: string
    filter_locked:
      description: Filter on locked
      in: query
      name: locked
      schema:
        type: string
    filter_log_time:
      description: Filter on log time
      in: query
      name: log_time
      schema:
        type: string
    filter_lsm:
      description: Filter on lsm
      in: query
      name: lsm
      schema:
        type: string
    filter_max:
      description: Filter on max
      in: query
      name: max
      schema:
        type: string
    filter_modification_date:
      description: Filter on modification date
      in: query
      name: modification_date
      schema:
        type: string
    filter_modification_username:
      description: Filter on modification username
      in: query
      name: modification_username
      schema:
        type: string
    filter_mount_count:
      description: Filter on mount count
      in: query
      name: mount_count
      schema:
        type: string
    filter_mounted:
      description: Filter on mounted
      in: query
      name: mounted
      schema:
        type: string
    filter_nas_id:
      description: Filter on NAS id
      in: query
      name: nas_id
      schema:
        type: string
    filter_need_to_check:
      description: Filter on need to check
      in: query
      name: need_to_check
      schema:
        type: string
    filter_options:
      description: Filter on options
      in: query
      name: options
      schema:
        type: string
    filter_panel:
      description: Filter on panel
      in: query
      name: panel
      schema:
        type: string
    filter_path:
      description: Filter on path
      in: query
      name: path
      schema:
        type: string
    filter_permission:
      description: Filter on permission
      in: query
      name: permission
      schema:
        type: string
    filter_price:
      description: Filter on price
      in: query
      name: price
      schema:
        type: string
    filter_primary_id:
      description: Filter on primary id
      in: query
      name: primary_id
      schema:
        type: string
    filter_priority:
      description: Filter on priority
      in: query
      name: priority
      schema:
        type: string
    filter_privilege:
      description: Filter on privilege
      in: query
      name: privilege
      schema:
        type: string
    filter_processed_files:
      description: Filter on processed files
      in: query
      name: processed_files
      schema:
        type: string
    filter_processed_size:
      description: Filter on processed size
      in: query
      name: processed_size
      schema:
        type: string
    filter_product:
      description: Filter on product
      in: query
      name: product
      schema:
        type: string
    filter_protocol:
      description: Filter on protocol
      in: query
      name: protocol
      schema:
        type: string
    filter_provider:
      description: Filter on provider
      in: query
      name: provider
      schema:
        type: string
    filter_quota_on_cache:
      description: Filter on quota on cache
      in: query
      name: quota_on_cache
      schema:
        type: string
    filter_quota_total_size:
      description: Filter on quota total size
      in: query
      name: quota_total_size
      schema:
        type: string
    filter_region:
      description: Filter on region
      in: query
      name: region
      schema:
        type: string
    filter_repack_status:
      description: Filter on repack status
      in: query
      name: repack_status
      schema:
        type: string
    filter_scan_interval:
      description: Filter on mount point scan interval
      in: query
      name: scan_interval
      schema:
        type: string
    filter_scratch:
      description: Filter on scratch
      in: query
      name: scratch
      schema:
        type: string
    filter_scsi_address:
      description: Filter on scsi address
      in: query
      name: scsi_address
      schema:
        type: string
    filter_serial:
      description: Filter on serial
      in: query
      name: serial
      schema:
        type: string
    filter_sgdevice:
      description: Filter on sgdevice
      in: query
      name: sgdevice
      schema:
        type: string
    filter_size:
      description: Filter on size
      in: query
      name: size
      schema:
        type: string
    filter_stat_size_on_cache:
      description: Filter on stat size on cache
      in: query
      name: stat_size_on_cache
      schema:
        type: string
    filter_stat_total_files:
      description: Filter on stat total files
      in: query
      name: stat_total_files
      schema:
        type: string
    filter_stat_total_size:
      description: Filter on stat total size
      in: query
      name: stat_total_size
      schema:
        type: string
    filter_status:
      description: Filter on status
      in: query
      name: status
      schema:
        type: string
    filter_storage_slots:
      description: Filter on storage slots
      in: query
      name: storage_slots
      schema:
        type: string
    filter_storage_slots_address:
      description: Filter on storage slots address
      in: query
      name: storage_slots_address
      schema:
        type: string
    filter_tape_id:
      description: Filter on tape id
      in: query
      name: tape_id
      schema:
        type: string
    filter_tape_library_id:
      description: Filter on tape library id
      in: query
      name: tape_library_id
      schema:
        type: string
    filter_target:
      description: Filter on mount point target
      in: query
      name: target
      schema:
        type: string
    filter_task_id:
      description: Filter on task id
      in: query
      name: task_id
      schema:
        type: string
    filter_to_process_files:
      description: Filter on to process files
      in: query
      name: to_process_files
      schema:
        type: string
    filter_to_process_size:
      description: Filter on to process size
      in: query
      name: to_process_size
      schema:
        type: string
    filter_transport:
      description: Filter on transport
      in: query
      name: transport
      schema:
        type: string
    filter_uid:
      description: Filter on uid
      in: query
      name: uid
      schema:
        type: string
    filter_url:
      description: Filter on url
      in: query
      name: url
      schema:
        type: string
    filter_url_proxy:
      description: Filter on url proxy
      in: query
      name: url_proxy
      schema:
        type: string
    filter_use_by:
      description: Filter on use by
      in: query
      name: use_by
      schema:
        type: string
    filter_use_file_name_processed:
      description: Filter on use file name processed
      in: query
      name: use_file_name_processed
      schema:
        type: string
    filter_use_file_processed_size:
      description: Filter on use file processed size
      in: query
      name: use_file_processed_size
      schema:
        type: string
    filter_use_file_size_to_process:
      description: Filter on use file size to process
      in: query
      name: use_file_size_to_process
      schema:
        type: string
    filter_use_to:
      description: Filter on use to
      in: query
      name: use_to
      schema:
        type: string
    filter_username:
      description: Filter on username
      in: query
      name: username
      schema:
        type: string
    filter_value:
      description: Filter on value
      in: query
      name: value
      schema:
        type: string
    filter_vendor:
      description: Filter on vendor
      in: query
      name: vendor
      schema:
        type: string
    filter_write_protect:
      description: Filter on write protect
      in: query
      name: write_protect
      schema:
        type: string
    filter_script:
      description: Filter on task callback script
      in: query
      name: script
      schema:
        type: string
    filter_workflow_type:
      description: Filter on task workflow type
      in: query
      name: workflow_type
      schema:
        type: string
    filter_workflow_action:
      description: Filter on task workflow action
      in: query
      name: workflow_action
      schema:
        type: string
    filter_source_type:
      description: Filter on task source type
      in: query
      name: source_type
      schema:
        type: string
    filter_destination_type:
      description: Filter on task destination type
      in: query
      name: destination_type
      schema:
        type: string
    filter_source_pool_id:
      description: Filter on task source pool id
      in: query
      name: source_pool_id
      schema:
        type: string
    filter_source_pool_name:
      description: Filter on task source pool name
      in: query
      name: source_pool_name
      schema:
        type: string
    filter_source_tape_id:
      description: Filter on task source tape id
      in: query
      name: source_tape_id
      schema:
        type: string
    filter_source_tape_barcode:
      description: Filter on task source tape barcode
      in: query
      name: source_tape_barcode
      schema:
        type: string
    filter_destination_pool_id:
      description: Filter on task destination pool id
      in: query
      name: destination_pool_id
      schema:
        type: string
    filter_destination_pool_name:
      description: Filter on task destination pool name
      in: query
      name: destination_pool_name
      schema:
        type: string
    filter_destination_tape_id:
      description: Filter on task destination tape id
      in: query
      name: destination_tape_id
      schema:
        type: string
    filter_destination_tape_barcode:
      description: Filter on task destination tape barcode
      in: query
      name: destination_tape_barcode
      schema:
        type: string
    with_next_schedule:
      description: Display the next scheduled date, and information about missing
        executions.
      in: query
      name: with_next
      schema:
        default: true
        type: boolean
    filter_rrule:
      description: Filter on RRule of schedule
      in: query
      name: rrule
      schema:
        type: string
    filter_done:
      description: Filter on done schedule
      in: query
      name: done
      schema:
        type: string
    api_key_id:
      description: Numeric ID of API Key.
      in: path
      name: api_key_id
      required: true
      schema:
        type: integer
    file_id:
      description: Numeric ID of file.
      in: path
      name: file_id
      required: true
      schema:
        type: integer
    file_parent_id:
      description: Numeric ID of parent folder.
      in: path
      name: file_parent_id
      required: true
      schema:
        type: integer
    container_id:
      description: Numeric ID or name of container.
      in: path
      name: container_id
      required: true
      schema:
        type: string
    container_privilege_id:
      description: Numeric ID of container privilege.
      in: path
      name: container_privilege_id
      required: true
      schema:
        type: integer
    tape_library_id:
      description: Numeric ID, serial, or name of tape library.
      in: path
      name: tape_library_id
      required: true
      schema:
        type: string
    tape_id:
      description: Numeric ID, or barcode of tape.
      in: path
      name: tape_id
      required: true
      schema:
        type: string
    pool_id:
      description: Numeric ID, or name of pool.
      in: path
      name: pool_id
      required: true
      schema:
        type: string
    tape_drive_id:
      description: Numeric ID, serial, or name of tape drive.
      in: path
      name: tape_drive_id
      required: true
      schema:
        type: string
    cloud_connector_id:
      description: Numeric ID or name of cloud connector.
      in: path
      name: cloud_connector_id
      required: true
      schema:
        type: string
    cloud_bucket_id:
      description: Numeric ID or name of cloud bucket.
      in: path
      name: cloud_bucket_id
      required: true
      schema:
        type: string
    nas_id:
      description: Numeric ID or name of NAS.
      in: path
      name: nas_id
      required: true
      schema:
        type: string
    nas_share_id:
      description: Numeric ID or name of NAS share.
      in: path
      name: nas_share_id
      required: true
      schema:
        type: string
    task_id:
      description: Numeric ID or name of task. Task names are not unique, it's recommanded
        to use numeric ID.
      in: path
      name: task_id
      required: true
      schema:
        type: string
    task_source_id:
      description: Numeric ID of task source.
      in: path
      name: task_source_id
      required: true
      schema:
        type: integer
    task_destination_id:
      description: Numeric ID of task destination.
      in: path
      name: task_destination_id
      required: true
      schema:
        type: integer
    task_option_id:
      description: Numeric ID of task option.
      in: path
      name: task_option_id
      required: true
      schema:
        type: integer
    task_callback_id:
      description: Numeric ID of task callback.
      in: path
      name: task_callback_id
      required: true
      schema:
        type: integer
    task_metadatum_id:
      description: Numeric ID of task metadatum.
      in: path
      name: task_metadatum_id
      required: true
      schema:
        type: integer
    task_execution_id:
      description: Numeric ID of task execution.
      in: path
      name: task_execution_id
      required: true
      schema:
        type: string
    sync_primary_tx:
      description: New transaction number.
      in: query
      name: tx
      required: true
      schema:
        type: integer
  requestBodies:
    api_key_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api_key_full'
      required: true
    container_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/container'
      required: true
    container_privilege_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/container_privilege'
      required: true
    tape_library_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape_library'
      required: true
    tape_drive_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape_drive'
      required: true
    pool_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/pool_up'
      required: true
    primary_scan_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/primary_scan'
      required: true
    cloud_connector_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cloud_connector'
      required: true
    cloud_bucket_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cloud_bucket'
      required: true
    nas_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/nas'
      required: true
    nas_share_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/nas_share'
      required: true
    task_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task'
      required: true
    task_source_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_source_up'
      required: true
    task_destination_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_destination_up'
      required: true
    task_schedule_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_schedule'
      required: true
    task_option_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_option'
      required: true
    task_callback_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_callback'
      required: true
    task_metadatum_body:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_metadatum'
      required: true
    reset_form:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/reset'
      required: true
  responses:
    active_job_status:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/active_job_status'
        queued:
          example:
            value:
              job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
              status: queued
        working:
          example:
            value:
              job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
              status: working
              progress: 2
              total: 6
        failed:
          example:
            value:
              job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
              status: failed
      description: An active job that may be queued, working, completed or failed.
    api_key_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api_key_collection'
      description: List of API Keys.
    api_key_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api_key_full'
      description: A specific file.
    cloud_buckets_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cloud_bucket_collection'
      description: List of cloud buckets.
    cloud_buckets_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cloud_bucket'
      description: A specific cloud bucket.
    cloud_buckets_sync:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cloud_bucket_simple_collection'
      description: Simple list of cloud buckets.
    cloud_connectors_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cloud_connector_collection'
      description: List of cloud connectors.
    cloud_connectors_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/cloud_connector'
      description: A specific cloud connector.
    container_privileges_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/container_privilege_collection'
      description: List of container privileges.
    container_privileges_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/container_privilege'
      description: A specific container privilege.
    containers_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/container_collection'
      description: List of containers.
    containers_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/container'
      description: A specific container.
    download_traces:
      content:
        application/json:
          schema:
            format: binary
            type: string
      description: A completed job for downloading traces.
    files_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/nodeum_file_collection'
      description: List of files.
    files_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/nodeum_file_with_path'
      description: A specific file.
    import_files_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/import_file_collection'
      description: List of imported files.
    import_files_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/import_file_with_path'
      description: A specific imported file.
    mount_status:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/mount_status'
      description: Mount status of storage.
    mounts_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/mount_collection'
      description: List of mounted storages.
    nas_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/nas_collection'
      description: List of NAS.
    nas_shares_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/nas_share_collection'
      description: List of NAS shares.
    nas_shares_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/nas_share'
      description: A specific NAS share.
    nas_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/nas'
      description: A specific NAS.
    not_found:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: The requested resource was not found. The detailed error will be
        of type `not_found`.
    on_tapes_files_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/on_tapes_file_collection'
      description: List of files on tapes.
    on_tapes_files_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/on_tapes_file'
      description: A specific file on tapes.
    pools_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/pool_collection'
      description: List of pools.
    pools_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/pool'
      description: A specific pool.
    primary_scan_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/primary_scan'
      description: The primary pool scan status.
    reset:
      content:
        application/json:
          schema:
            format: binary
            type: string
      description: The var file created
    tape_drives_devices:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape_drive_device_collection'
      description: List of tape drives devices.
    tape_drives_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape_drive_collection'
      description: List of tape drives.
    tape_drives_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape_drive'
      description: A specific tape drive.
    tape_libraries_devices:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape_library_device_collection'
      description: List of tape libraries devices.
    tape_libraries_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape_library_collection'
      description: List of tape libraries.
    tape_libraries_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape_library'
      description: A specific tape library.
    tape_stat_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape_stat'
      description: A specific tape statistic.
    tape_stats_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape_stat_collection'
      description: List of tape statistics.
    tapes_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape_collection'
      description: List of tapes.
    tapes_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tape'
      description: A specific tape.
    task_callbacks_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_callback_collection'
      description: List of task callbacks.
    task_callbacks_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_callback'
      description: A specific task callback.
    task_destinations_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_destination_collection'
      description: List of task destinations.
    task_destinations_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_destination_down'
      description: A specific task destination.
    task_executions_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_execution_collection'
      description: List of task executions.
    task_executions_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_execution'
      description: A specific task execution.
    task_metadata_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_metadatum_collection'
      description: List of task metadata.
    task_metadata_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_metadatum'
      description: A specific task metadatum.
    task_options_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_option_collection'
      description: List of task options.
    task_options_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_option'
      description: A specific task option.
    task_schedule_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_schedule'
      description: A specific task schedule.
    task_schedules_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_schedule_collection'
      description: List of task schedules.
    task_sources_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_source_collection'
      description: List of task sources.
    task_sources_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_source_down'
      description: A specific task source.
    tasks_index:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task_collection'
      description: List of tasks.
    tasks_show:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/task'
      description: A specific task.
    unprocessable_entity:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
      description: The received resource was not correctly formatted.
  schemas:
    attribute_error:
      discriminator:
        propertyName: error
      properties:
        error:
          type: string
      required:
      - error
      type: object
    blank:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      description: Attribute can't be blank
      x-discriminator-value: blank
    frozen:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      description: Attribute can't be updated
      x-discriminator-value: frozen
    taken:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      - $ref: '#/components/schemas/taken_allOf'
      description: Attribute has already been taken
      x-discriminator-value: taken
    invalid:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      - $ref: '#/components/schemas/taken_allOf'
      description: Attribute is invalid
      x-discriminator-value: invalid
    too_short:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      - $ref: '#/components/schemas/too_short_allOf'
      description: Attribute is too short (minimum is %{count} characters)
      x-discriminator-value: too_short
    too_long:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      - $ref: '#/components/schemas/too_long_allOf'
      description: Attribute is too long (maximum is %{count} characters)
      x-discriminator-value: too_long
    greater_than:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      - $ref: '#/components/schemas/greater_than_allOf'
      description: Attribute must be greater than %{count}
      x-discriminator-value: greater_than
    greater_than_or_equal_to:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      - $ref: '#/components/schemas/greater_than_allOf'
      description: Attribute must be greater than or equal to %{count}
      x-discriminator-value: greater_than_or_equal_to
    less_than:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      - $ref: '#/components/schemas/less_than_allOf'
      description: Attribute must be less than %{count}
      x-discriminator-value: less_than
    less_than_or_equal_to:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      - $ref: '#/components/schemas/less_than_allOf'
      description: Attribute must be less than or equal to %{count}
      x-discriminator-value: less_than_or_equal_to
    occurrence_less_than:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      - $ref: '#/components/schemas/occurrence_less_than_allOf'
      description: Must have less than %{count} occurrences (currently have %{value})
      x-discriminator-value: occurrence_less_than
    occurrence_less_than_or_equal_to:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      - $ref: '#/components/schemas/occurrence_less_than_allOf'
      description: Must have at most or less than %{count} occurrences (currently
        have %{value})
      x-discriminator-value: occurrence_less_than_or_equal_to
    quota_on_cache:
      allOf:
      - $ref: '#/components/schemas/attribute_error'
      description: Quota on cache can't be above 100% (total)
      x-discriminator-value: quota_on_cache
    error:
      properties:
        details:
          additionalProperties:
            items:
              $ref: '#/components/schemas/attribute_error'
            type: array
          description: Parsable objects describing the errors. The key is the invalid
            attribute name.
          type: object
        messages:
          description: English description of the errors.
          items:
            type: string
          type: array
      type: object
    mount_status:
      example:
        message: message
        mounted: true
        status:
          nas_share_name: nas_share_name
          nas_name: nas_name
          cloud_connector_id: 5
          cloud_bucket_id: 5
          tape_id: 2
          source: //server.local/shared_folder
          cloud_bucket_name: cloud_bucket_name
          type: cifs
          pool_id: 0
          pool_name: pool_name
          major_minor: 0:189
          target: /mnt/MOUNT_POINTS/folder
          tape_library_serial: tape_library_serial
          nas_share_id: 1
          cloud_connector_name: cloud_connector_name
          tape_library_id: 7
          tape_barcode: tape_barcode
          options: vers=3.0,rsize=1048576,wsize=1048576
          id: 123
          nas_id: 6
          tape_library_name: tape_library_name
      properties:
        mounted:
          example: true
          readOnly: true
          type: boolean
        message:
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/mount_info'
      type: object
    mount_notification:
      properties:
        action:
          enum:
          - added
          - removed
          - modified
          type: string
        info:
          $ref: '#/components/schemas/mount_info'
      type: object
    active_job_status:
      example:
        total: 6
        job_id: 6f4d759d-48e9-43c8-ab24-640f5ea63922
        progress: 2
        status: working
      properties:
        job_id:
          example: 6f4d759d-48e9-43c8-ab24-640f5ea63922
          readOnly: true
          type: string
        status:
          enum:
          - queued
          - working
          - completed
          - failed
          example: working
          readOnly: true
          type: string
        progress:
          example: 2
          readOnly: true
          type: integer
        total:
          example: 6
          readOnly: true
          type: integer
      type: object
    api_key:
      example:
        name: dev-key
        id: 5
        key: '******************Iwgo'
      properties:
        id:
          example: 5
          readOnly: true
          type: integer
        key:
          example: '******************Iwgo'
          readOnly: true
          type: string
        name:
          example: dev-key
          type: string
      type: object
    api_key_full:
      allOf:
      - $ref: '#/components/schemas/api_key'
      - $ref: '#/components/schemas/api_key_full_allOf'
    api_key_scope:
      properties:
        controller:
          type: string
        action:
          type: string
      type: object
    api_key_collection:
      example:
        count: 1
        api_keys:
        - name: dev-key
          id: 5
          key: '******************Iwgo'
        - name: dev-key
          id: 5
          key: '******************Iwgo'
      properties:
        api_keys:
          items:
            $ref: '#/components/schemas/api_key'
          type: array
        count:
          example: 1
          type: integer
      type: object
    nodeum_file:
      example:
        parent: 100
        uid: 1000
        gid: 1000
        size: 1063457
        change_date: 2018-12-10T08:33:47.000Z
        access_date: 2018-12-10T15:27:51.000Z
        modification_date: 2018-12-10T15:29:23.000Z
        name: my-file.txt
        primary_id: 100
        permission: 100666
        id: 105
        type: file
      properties:
        id:
          example: 105
          readOnly: true
          type: integer
        name:
          example: my-file.txt
          readOnly: true
          type: string
        parent:
          example: 100
          readOnly: true
          type: integer
        primary_id:
          example: 100
          readOnly: true
          type: integer
        type:
          enum:
          - file
          - folder
          example: file
          readOnly: true
          type: string
        permission:
          example: 100666
          readOnly: true
          type: integer
        size:
          example: 1063457
          readOnly: true
          type: integer
        change_date:
          example: 2018-12-10T08:33:47.000Z
          readOnly: true
          type: string
        modification_date:
          example: 2018-12-10T15:29:23.000Z
          readOnly: true
          type: string
        access_date:
          example: 2018-12-10T15:27:51.000Z
          readOnly: true
          type: string
        uid:
          example: 1000
          readOnly: true
          type: integer
        gid:
          example: 1000
          readOnly: true
          type: integer
      type: object
    nodeum_file_with_path:
      allOf:
      - $ref: '#/components/schemas/nodeum_file'
      - $ref: '#/components/schemas/nodeum_file_with_path_allOf'
    import_file:
      example:
        parent: 100
        uid: 1000
        gid: 1000
        size: 1063457
        change_date: 2018-12-10T08:33:47.000Z
        access_date: 2018-12-10T15:27:51.000Z
        modification_date: 2018-12-10T15:29:23.000Z
        name: my-file.txt
        primary_id: 100
        permission: 100666
        id: 105
        type: file
      properties:
        id:
          example: 105
          readOnly: true
          type: integer
        name:
          example: my-file.txt
          readOnly: true
          type: string
        parent:
          example: 100
          readOnly: true
          type: integer
        primary_id:
          example: 100
          readOnly: true
          type: integer
        type:
          enum:
          - file
          - folder
          example: file
          readOnly: true
          type: string
        permission:
          example: 100666
          readOnly: true
          type: integer
        size:
          example: 1063457
          readOnly: true
          type: integer
        change_date:
          example: 2018-12-10T08:33:47.000Z
          readOnly: true
          type: string
        modification_date:
          example: 2018-12-10T15:29:23.000Z
          readOnly: true
          type: string
        access_date:
          example: 2018-12-10T15:27:51.000Z
          readOnly: true
          type: string
        uid:
          example: 1000
          readOnly: true
          type: integer
        gid:
          example: 1000
          readOnly: true
          type: integer
      type: object
    import_file_with_path:
      allOf:
      - $ref: '#/components/schemas/import_file'
      - $ref: '#/components/schemas/nodeum_file_with_path_allOf'
    on_tapes_file:
      example:
        size: 1063457
        name: my-file.txt
        id: 105
        type: file
        barcodes:
        - NOD407L5
        - NOD415L5
      properties:
        id:
          example: 105
          readOnly: true
          type: integer
        name:
          example: my-file.txt
          readOnly: true
          type: string
        type:
          enum:
          - file
          - folder
          example: file
          readOnly: true
          type: string
        size:
          example: 1063457
          readOnly: true
          type: integer
        barcodes:
          example:
          - NOD407L5
          - NOD415L5
          items:
            type: string
          readOnly: true
          type: array
      type: object
    container:
      example:
        stat_total_files: 99301
        only_on_cache_file_count: 19123
        stat_total_size: 6145076462
        stat_size_on_cache: 6899417088
        quota_total_size: 0
        guest_right: read
        last_update: 2019-08-05T14:24:15.000Z
        name: my-container
        comment: Read only container for random stuff
        id: 100
        quota_on_cache: 6
        only_on_cache_file_size_sum: 3294517012
      properties:
        id:
          example: 100
          readOnly: true
          type: integer
        name:
          example: my-container
          type: string
        comment:
          example: Read only container for random stuff
          type: string
        quota_total_size:
          type: integer
        quota_on_cache:
          type: integer
        stat_total_files:
          example: 99301
          readOnly: true
          type: integer
        only_on_cache_file_count:
          example: 19123
          readOnly: true
          type: integer
        stat_total_size:
          example: 6145076462
          readOnly: true
          type: integer
        stat_size_on_cache:
          example: 6899417088
          readOnly: true
          type: integer
        only_on_cache_file_size_sum:
          example: 3294517012
          readOnly: true
          type: integer
        guest_right:
          enum:
          - none
          - read
          - read_write
          example: read
          type: string
        last_update:
          example: 2019-08-05T14:24:15.000Z
          readOnly: true
          type: string
      type: object
    container_privilege:
      example:
        name: admin
        id: 1
        privilege: read_write
        type: user
      properties:
        id:
          example: 1
          readOnly: true
          type: integer
        name:
          example: admin
          type: string
        privilege:
          enum:
          - none
          - read
          - read_write
          example: read_write
          type: string
        type:
          enum:
          - user
          - group
          example: user
          type: string
      type: object
    tape_library_device:
      example:
        acs: 0
        protocol: scsi
        product: 3573-TL
        storage_slots_address: 1024
        serial: C0F905D800A0_LL3
        vendor: IBM
        storage_slots: 20
        io_slots_address: 768
        firmware: "6.24"
        device: /dev/sg9
        io_slots: 4
      properties:
        serial:
          example: C0F905D800A0_LL3
          readOnly: true
          type: string
        protocol:
          enum:
          - scsi
          - acsls
          example: scsi
          readOnly: true
          type: string
        vendor:
          example: IBM
          readOnly: true
          type: string
        product:
          example: 3573-TL
          readOnly: true
          type: string
        firmware:
          example: "6.24"
          readOnly: true
          type: string
        device:
          example: /dev/sg9
          readOnly: true
          type: string
        acs:
          readOnly: true
          type: integer
        storage_slots:
          example: 20
          readOnly: true
          type: integer
        storage_slots_address:
          example: 1024
          readOnly: true
          type: integer
        io_slots:
          example: 4
          readOnly: true
          type: integer
        io_slots_address:
          example: 768
          readOnly: true
          type: integer
      type: object
    tape_library_device_collection:
      example:
        tape_libraries:
        - acs: 0
          protocol: scsi
          product: 3573-TL
          storage_slots_address: 1024
          serial: C0F905D800A0_LL3
          vendor: IBM
          storage_slots: 20
          io_slots_address: 768
          firmware: "6.24"
          device: /dev/sg9
          io_slots: 4
        - acs: 0
          protocol: scsi
          product: 3573-TL
          storage_slots_address: 1024
          serial: C0F905D800A0_LL3
          vendor: IBM
          storage_slots: 20
          io_slots_address: 768
          firmware: "6.24"
          device: /dev/sg9
          io_slots: 4
      properties:
        tape_libraries:
          items:
            $ref: '#/components/schemas/tape_library_device'
          type: array
      type: object
    tape_library:
      allOf:
      - $ref: '#/components/schemas/tape_library_device'
      - $ref: '#/components/schemas/tape_library_allOf'
    tape_drive_device:
      example:
        product: ULT3580-TD5
        serial: C0F9000A01
        vendor: IBM
        firmware: D711
        device: /dev/st5
        scsi_address: 256
        sgdevice: /dev/sg8
      properties:
        serial:
          example: C0F9000A01
          readOnly: true
          type: string
        scsi_address:
          example: 256
          readOnly: true
          type: integer
        vendor:
          example: IBM
          readOnly: true
          type: string
        product:
          example: ULT3580-TD5
          readOnly: true
          type: string
        firmware:
          example: D711
          readOnly: true
          type: string
        device:
          description: When saved, device may be prefixed by *n* (eg. `/dev/nst5`)
          example: /dev/st5
          readOnly: true
          type: string
        sgdevice:
          example: /dev/sg8
          readOnly: true
          type: string
      type: object
    tape_drive_device_collection:
      example:
        tape_drives:
        - product: ULT3580-TD5
          serial: C0F9000A01
          vendor: IBM
          firmware: D711
          device: /dev/st5
          scsi_address: 256
          sgdevice: /dev/sg8
        - product: ULT3580-TD5
          serial: C0F9000A01
          vendor: IBM
          firmware: D711
          device: /dev/st5
          scsi_address: 256
          sgdevice: /dev/sg8
      properties:
        tape_drives:
          items:
            $ref: '#/components/schemas/tape_drive_device'
          type: array
      type: object
    tape_drive:
      allOf:
      - $ref: '#/components/schemas/tape_drive_device'
      - $ref: '#/components/schemas/tape_drive_allOf'
    tape:
      example:
        need_to_check: true
        last_repack: last_repack
        ejected: true
        last_size_update: last_size_update
        type: data_lto5
        date_in: date_in
        write_protect: true
        tape_library_id: 2
        known: true
        force_import_type: true
        id: 10
        locked: true
        free: 6
        barcode: NOD407L5
        cleaning: true
        last_maintenance: last_maintenance
        date_move: date_move
        max: 1
        repack_status: true
        scratch: true
        pool_id: 6
        mounted: true
        location: Slot 2
        hash: hash
        mount_count: 0
      properties:
        id:
          example: 10
          readOnly: true
          type: integer
        tape_library_id:
          example: 2
          readOnly: true
          type: integer
        pool_id:
          example: 6
          readOnly: true
          type: integer
        barcode:
          example: NOD407L5
          readOnly: true
          type: string
        location:
          example: Slot 2
          readOnly: true
          type: string
        type:
          enum:
          - unknown
          - data
          - cleaning
          - diagnostic
          - data_lto1
          - data_lto2
          - data_lto3
          - data_lto4
          - data_lto5
          - data_lto6
          - data_lto7
          - data_lto8
          - data_lto9
          - data_lto10
          - data_lto11
          - data_lto12
          example: data_lto5
          readOnly: true
          type: string
        locked:
          readOnly: true
          type: boolean
        scratch:
          readOnly: true
          type: boolean
        cleaning:
          readOnly: true
          type: boolean
        write_protect:
          readOnly: true
          type: boolean
        mounted:
          readOnly: true
          type: boolean
        ejected:
          readOnly: true
          type: boolean
        known:
          readOnly: true
          type: boolean
        mount_count:
          readOnly: true
          type: integer
        date_in:
          readOnly: true
          type: string
        date_move:
          readOnly: true
          type: string
        free:
          readOnly: true
          type: integer
        max:
          readOnly: true
          type: integer
        last_size_update:
          readOnly: true
          type: string
        last_maintenance:
          readOnly: true
          type: string
        last_repack:
          readOnly: true
          type: string
        repack_status:
          readOnly: true
          type: boolean
        hash:
          readOnly: true
          type: string
        force_import_type:
          readOnly: true
          type: boolean
        need_to_check:
          readOnly: true
          type: boolean
      type: object
    tape_stat:
      example:
        bytes_read_from_medium: 6
        bytes_written_to_medium: 3
        data_compression_enabled: 3
        beginning_of_medium_passes: 8
        bytes_transferred_to_app_client: 1
        last_load_read_compression_ratio: 7
        total_used_native_capacity: 9
        fatal_suspended_reads: 7
        partition_0_remaining_capacity: 3
        partition_0_maximum_capacity: 7
        barcode: barcode
        unrecovered_read_errors: 3
        read_compression_ratio: 6
        medium_mount_time: 1
        medium_ready_time: 4
        worm: 6
        partition_1_remaining_capacity: 3
        mbytes_transferred_to_app_client: 6
        mounts: 0
        last_mount_unrecovered_write_errors: 2
        partition_1_maximum_capacity: 5
        bytes_transferred_from_app_client: 5
        write_servo_errors: 2
        last_mount_mbytes_read: 1
        datasets_written: 6
        last_mount_unrecovered_read_errors: 4
        fatal_suspended_writes: 6
        lifetime_mbytes_written: 1
        recovered_write_data_errors: 5
        recovered_read_errors: 9
        write_perms: 0
        unrecovered_write_data_errors: 5
        write_protect: 9
        mbytes_written_to_medium: 6
        write_compression_ratio: 3
        datasets_read: 1
        mbytes_transferred_from_app_client: 6
        suspended_writes: 7
        suspended_reads: 8
        last_load_write_compression_ratio: 6
        total_native_capacity: 5
        log_time: log_time
        middle_of_tape_passes: 9
        last_mount_mbytes_written: 7
        mbytes_read_from_medium: 2
        read_retries: 0
        read_perms: 4
        lifetime_mbytes_read: 1
        unrecovered_write_servo_errors: 7
        write_retries: 7
      properties:
        log_time:
          readOnly: true
          type: string
        barcode:
          readOnly: true
          type: string
        mounts:
          readOnly: true
          type: integer
        datasets_written:
          readOnly: true
          type: integer
        datasets_read:
          readOnly: true
          type: integer
        recovered_write_data_errors:
          readOnly: true
          type: integer
        unrecovered_write_data_errors:
          readOnly: true
          type: integer
        write_servo_errors:
          readOnly: true
          type: integer
        unrecovered_write_servo_errors:
          readOnly: true
          type: integer
        recovered_read_errors:
          readOnly: true
          type: integer
        unrecovered_read_errors:
          readOnly: true
          type: integer
        last_mount_unrecovered_write_errors:
          readOnly: true
          type: integer
        last_mount_unrecovered_read_errors:
          readOnly: true
          type: integer
        last_mount_mbytes_written:
          readOnly: true
          type: integer
        last_mount_mbytes_read:
          readOnly: true
          type: integer
        lifetime_mbytes_written:
          readOnly: true
          type: integer
        lifetime_mbytes_read:
          readOnly: true
          type: integer
        last_load_write_compression_ratio:
          readOnly: true
          type: integer
        last_load_read_compression_ratio:
          readOnly: true
          type: integer
        medium_mount_time:
          readOnly: true
          type: integer
        medium_ready_time:
          readOnly: true
          type: integer
        total_native_capacity:
          readOnly: true
          type: integer
        total_used_native_capacity:
          readOnly: true
          type: integer
        write_protect:
          readOnly: true
          type: integer
        worm:
          readOnly: true
          type: integer
        beginning_of_medium_passes:
          readOnly: true
          type: integer
        middle_of_tape_passes:
          readOnly: true
          type: integer
        read_compression_ratio:
          readOnly: true
          type: integer
        write_compression_ratio:
          readOnly: true
          type: integer
        mbytes_transferred_to_app_client:
          readOnly: true
          type: integer
        bytes_transferred_to_app_client:
          readOnly: true
          type: integer
        mbytes_read_from_medium:
          readOnly: true
          type: integer
        bytes_read_from_medium:
          readOnly: true
          type: integer
        mbytes_transferred_from_app_client:
          readOnly: true
          type: integer
        bytes_transferred_from_app_client:
          readOnly: true
          type: integer
        mbytes_written_to_medium:
          readOnly: true
          type: integer
        bytes_written_to_medium:
          readOnly: true
          type: integer
        data_compression_enabled:
          readOnly: true
          type: integer
        write_retries:
          readOnly: true
          type: integer
        write_perms:
          readOnly: true
          type: integer
        suspended_writes:
          readOnly: true
          type: integer
        fatal_suspended_writes:
          readOnly: true
          type: integer
        read_retries:
          readOnly: true
          type: integer
        read_perms:
          readOnly: true
          type: integer
        suspended_reads:
          readOnly: true
          type: integer
        fatal_suspended_reads:
          readOnly: true
          type: integer
        partition_0_remaining_capacity:
          readOnly: true
          type: integer
        partition_1_remaining_capacity:
          readOnly: true
          type: integer
        partition_0_maximum_capacity:
          readOnly: true
          type: integer
        partition_1_maximum_capacity:
          readOnly: true
          type: integer
      type: object
    pool:
      example:
        name: offline-tapes
        comment: ""
        primary_id: 100
        id: 6
        type: offline_archive
        content: tape
      properties:
        id:
          example: 6
          readOnly: true
          type: integer
        name:
          example: offline-tapes
          type: string
        comment:
          example: ""
          type: string
        type:
          enum:
          - active_archive
          - offline_archive
          - data_exchange
          - scratch
          - data_enrichment
          - primary
          example: offline_archive
          type: string
        content:
          enum:
          - tape
          - cloud
          - nas
          type: string
        primary_id:
          example: 100
          readOnly: true
          type: integer
      type: object
    pool_up:
      allOf:
      - $ref: '#/components/schemas/pool'
      - $ref: '#/components/schemas/pool_up_allOf'
    primary_scan:
      example:
        unit: minutes
        id: 0
        pool_id: 16
        enabled: true
        operand: 4.0
      properties:
        id:
          readOnly: true
          type: integer
        pool_id:
          example: 16
          type: integer
        enabled:
          example: true
          type: boolean
        operand:
          example: 4.0
          type: number
        unit:
          enum:
          - minutes
          - hours
          - days
          - weeks
          - months
          - years
          type: string
      type: object
    cloud_connector:
      example:
        secret_key: secret_key
        provider: generic_s3
        url_proxy: url_proxy
        access_key: access_key
        name: name
        id: 0
        region: region
        url: url
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        url:
          type: string
        url_proxy:
          type: string
        provider:
          enum:
          - generic_s3
          - amazon_aws_s3
          - cloudian_hyperstore
          - scality_ring
          - dell_emc_ecs
          - azure
          - google_cloud_storage
          - openstack_swift
          type: string
        region:
          type: string
        access_key:
          type: string
        secret_key:
          type: string
      type: object
    cloud_bucket:
      example:
        file_count: 5
        cloud_connector_id: 6
        price: price
        name: name
        location: location
        id: 0
        pool_id: 1
        file_size_sum: 5
      properties:
        id:
          readOnly: true
          type: integer
        cloud_connector_id:
          readOnly: true
          type: integer
        pool_id:
          readOnly: true
          type: integer
        name:
          readOnly: true
          type: string
        file_count:
          readOnly: true
          type: integer
        file_size_sum:
          readOnly: true
          type: integer
        location:
          readOnly: true
          type: string
        price:
          type: string
      type: object
    nas:
      example:
        price: "120.0"
        name: samba
        host: samba.local
        comment: Local NAS
        id: 2
        type: smb_v3
      properties:
        id:
          example: 2
          readOnly: true
          type: integer
        name:
          example: samba
          type: string
        host:
          example: samba.local
          type: string
        type:
          enum:
          - smb_v1
          - smb_v2_1
          - smb_v3
          - nfs_v3
          - nfs_v4
          - storenext_v5
          example: smb_v3
          type: string
        comment:
          example: Local NAS
          type: string
        price:
          example: "120.0"
          type: string
      type: object
    nas_share:
      example:
        file_count: 0
        path: archives/general
        password: '[censored]'
        name: archives_general
        options: rsize=1048576,wsize=1048576
        id: 10
        nas_id: 2
        pool_id: 6
        file_size_sum: 6
        username: admin
      properties:
        id:
          example: 10
          readOnly: true
          type: integer
        nas_id:
          example: 2
          readOnly: true
          type: integer
        pool_id:
          example: 6
          readOnly: true
          type: integer
        name:
          example: archives_general
          type: string
        path:
          example: archives/general
          type: string
        options:
          example: rsize=1048576,wsize=1048576
          type: string
        username:
          example: admin
          type: string
        password:
          example: '[censored]'
          type: string
        file_count:
          readOnly: true
          type: integer
        file_size_sum:
          readOnly: true
          type: integer
      type: object
    task:
      example:
        modification_username: modification_username
        workflow_action: copy
        job_finished: job_finished
        job_started: job_started
        source_type: container
        conflict_resolution: rename
        workflow_type: active_archive
        creation_date: creation_date
        priority: 6
        processed_size: 1
        destination_type: container
        to_process_size: 5
        creation_username: creation_username
        modification_date: modification_date
        name: name
        activate: true
        action: noop
        comment: comment
        id: 0
        status: not_activated
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        comment:
          type: string
        workflow_type:
          enum:
          - active_archive
          - offline_archive
          - data_exchange
          - data_migration
          - maintenance
          - data_enrichment
          type: string
        workflow_action:
          enum:
          - copy
          - move
          - scan
          - rehydratation
          - format
          - check_consistency
          - duplication
          - cache_cleaning
          - ejection
          - get_index
          - full_backup
          - incremental_backup
          type: string
        source_type:
          enum:
          - container
          - primary_nas
          - secondary_nas
          - primary_cloud
          - secondary_cloud
          - secondary_tape
          type: string
        destination_type:
          enum:
          - container
          - primary_nas
          - secondary_nas
          - primary_cloud
          - secondary_cloud
          - secondary_tape
          type: string
        priority:
          type: integer
        conflict_resolution:
          enum:
          - rename
          - overwrite
          - ignore
          type: string
        action:
          enum:
          - noop
          - run
          - pause
          - stop
          - resume
          readOnly: true
          type: string
        activate:
          type: boolean
        creation_date:
          readOnly: true
          type: string
        modification_date:
          readOnly: true
          type: string
        creation_username:
          readOnly: true
          type: string
        modification_username:
          readOnly: true
          type: string
        status:
          enum:
          - not_activated
          - done
          - in_progress
          - error
          - paused
          - stopped_by_system
          - in_queue
          - finished_with_warnings
          - calculating
          - stopped_by_user
          readOnly: true
          type: string
        job_started:
          readOnly: true
          type: string
        job_finished:
          readOnly: true
          type: string
        processed_size:
          readOnly: true
          type: integer
        to_process_size:
          readOnly: true
          type: integer
      type: object
    task_source_up:
      properties:
        file_id:
          type: integer
        file_path:
          type: string
        range:
          example:
          - 150000
          - 290000
          items:
            type: integer
          maxItems: 2
          minItems: 2
          type: array
        import_file_id:
          type: integer
        import_file_path:
          type: string
        tape_id:
          type: integer
        tape_barcode:
          type: string
        pool_id:
          type: integer
        pool_name:
          type: string
      type: object
    task_source_down:
      example:
        container:
          stat_total_files: 99301
          only_on_cache_file_count: 19123
          stat_total_size: 6145076462
          stat_size_on_cache: 6899417088
          quota_total_size: 0
          guest_right: read
          last_update: 2019-08-05T14:24:15.000Z
          name: my-container
          comment: Read only container for random stuff
          id: 100
          quota_on_cache: 6
          only_on_cache_file_size_sum: 3294517012
        file:
          parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: 2018-12-10T08:33:47.000Z
          access_date: 2018-12-10T15:27:51.000Z
          modification_date: 2018-12-10T15:29:23.000Z
          name: my-file.txt
          primary_id: 100
          permission: 100666
          id: 105
          type: file
        tape:
          need_to_check: true
          last_repack: last_repack
          ejected: true
          last_size_update: last_size_update
          type: data_lto5
          date_in: date_in
          write_protect: true
          tape_library_id: 2
          known: true
          force_import_type: true
          id: 10
          locked: true
          free: 6
          barcode: NOD407L5
          cleaning: true
          last_maintenance: last_maintenance
          date_move: date_move
          max: 1
          repack_status: true
          scratch: true
          pool_id: 6
          mounted: true
          location: Slot 2
          hash: hash
          mount_count: 0
        pool:
          name: offline-tapes
          comment: ""
          primary_id: 100
          id: 6
          type: offline_archive
          content: tape
        range:
        - 150000
        - 290000
        id: 0
        import_file:
          parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: 2018-12-10T08:33:47.000Z
          access_date: 2018-12-10T15:27:51.000Z
          modification_date: 2018-12-10T15:29:23.000Z
          name: my-file.txt
          primary_id: 100
          permission: 100666
          id: 105
          type: file
      properties:
        id:
          readOnly: true
          type: integer
        file:
          $ref: '#/components/schemas/nodeum_file'
        range:
          example:
          - 150000
          - 290000
          items:
            type: integer
          maxItems: 2
          minItems: 2
          type: array
        container:
          $ref: '#/components/schemas/container'
        import_file:
          $ref: '#/components/schemas/import_file'
        tape:
          $ref: '#/components/schemas/tape'
        pool:
          $ref: '#/components/schemas/pool'
      type: object
    task_destination_up:
      properties:
        folder_id:
          type: integer
        folder_path:
          type: string
        tape_id:
          type: integer
        tape_barcode:
          type: string
        pool_id:
          type: integer
        pool_name:
          type: string
      type: object
    task_destination_down:
      example:
        container:
          stat_total_files: 99301
          only_on_cache_file_count: 19123
          stat_total_size: 6145076462
          stat_size_on_cache: 6899417088
          quota_total_size: 0
          guest_right: read
          last_update: 2019-08-05T14:24:15.000Z
          name: my-container
          comment: Read only container for random stuff
          id: 100
          quota_on_cache: 6
          only_on_cache_file_size_sum: 3294517012
        folder:
          parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: 2018-12-10T08:33:47.000Z
          access_date: 2018-12-10T15:27:51.000Z
          modification_date: 2018-12-10T15:29:23.000Z
          name: my-file.txt
          primary_id: 100
          permission: 100666
          id: 105
          type: file
        tape:
          need_to_check: true
          last_repack: last_repack
          ejected: true
          last_size_update: last_size_update
          type: data_lto5
          date_in: date_in
          write_protect: true
          tape_library_id: 2
          known: true
          force_import_type: true
          id: 10
          locked: true
          free: 6
          barcode: NOD407L5
          cleaning: true
          last_maintenance: last_maintenance
          date_move: date_move
          max: 1
          repack_status: true
          scratch: true
          pool_id: 6
          mounted: true
          location: Slot 2
          hash: hash
          mount_count: 0
        pool:
          name: offline-tapes
          comment: ""
          primary_id: 100
          id: 6
          type: offline_archive
          content: tape
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        folder:
          $ref: '#/components/schemas/nodeum_file'
        container:
          $ref: '#/components/schemas/container'
        tape:
          $ref: '#/components/schemas/tape'
        pool:
          $ref: '#/components/schemas/pool'
      type: object
    task_schedule:
      example:
        next: 2019-10-11T15:00:00Z
        missed_last: 2019-10-11T13:00:00Z
        missed_first: 2019-10-11T11:00:00Z
        rrule: |-
          DTSTART;TZID=Europe/Paris:20190705T085000
          RRULE:FREQ=WEEKLY
        skipped_count: 0
        task_id: 16
        id: 0
        done: false
        missed_count: 2
      properties:
        id:
          readOnly: true
          type: integer
        task_id:
          example: 16
          type: integer
        rrule:
          example: |-
            DTSTART;TZID=Europe/Paris:20190705T085000
            RRULE:FREQ=WEEKLY
          type: string
        done:
          example: false
          type: boolean
        next:
          example: 2019-10-11T15:00:00Z
          readOnly: true
          type: string
        missed_count:
          example: 2
          readOnly: true
          type: integer
        skipped_count:
          example: 0
          readOnly: true
          type: integer
        missed_last:
          example: 2019-10-11T13:00:00Z
          readOnly: true
          type: string
        missed_first:
          example: 2019-10-11T11:00:00Z
          readOnly: true
          type: string
      type: object
    task_option:
      example:
        id: 0
        type: file_checksum
        value: value
      properties:
        id:
          readOnly: true
          type: integer
        type:
          enum:
          - file_checksum
          - reset_file_date
          - reset_folder_date
          - rename_to
          - execution_task_id
          - selected_drive
          - parallel_processing
          - task_id
          - full_report
          - processing_order
          - rehydration_usage_threshold
          - rehydration_deleted_files_threshold
          - learning_type
          - learning_threshold
          - tape_to_scratch
          - eject_tape_after
          - barcodes
          - overwrite
          - task_template
          type: string
        value:
          type: string
      type: object
    task_callback:
      example:
        id: 0
        type: filter
        script: script
      properties:
        id:
          readOnly: true
          type: integer
        type:
          enum:
          - filter
          type: string
        script:
          type: string
      type: object
    task_metadatum:
      example:
        id: 0
        value: value
        key: key
      properties:
        id:
          readOnly: true
          type: integer
        key:
          type: string
        value:
          type: string
      type: object
    task_execution:
      example:
        workflow_action: copy
        to_process_files: 126
        bandwidth: 1
        job_finished: 2018-11-21T10:48:08.000Z
        job_started: 2018-11-21T10:47:53.000Z
        task_id: 0
        source_type: container
        processed_files: 113
        workflow_type: active_archive
        log_time: 2018-11-21T09:48:09.000Z
        processed_size: 12115125
        destination_type: container
        to_process_size: 16515610
        finalized_files: 126
        name: name
        estimation_time: 6
        id: "1542797273225418555"
        status: finished_with_warnings
      properties:
        id:
          example: "1542797273225418555"
          type: string
        task_id:
          type: integer
        name:
          type: string
        workflow_type:
          enum:
          - active_archive
          - offline_archive
          - data_exchange
          - data_migration
          - maintenance
          - data_enrichment
          type: string
        workflow_action:
          enum:
          - copy
          - move
          - scan
          - rehydratation
          - format
          - check_consistency
          - duplication
          - cache_cleaning
          - ejection
          - get_index
          - full_backup
          - incremental_backup
          type: string
        source_type:
          enum:
          - container
          - primary_nas
          - secondary_nas
          - primary_cloud
          - secondary_cloud
          - secondary_tape
          type: string
        destination_type:
          enum:
          - container
          - primary_nas
          - secondary_nas
          - primary_cloud
          - secondary_cloud
          - secondary_tape
          type: string
        status:
          enum:
          - not_activated
          - done
          - in_progress
          - error
          - paused
          - stopped_by_system
          - in_queue
          - finished_with_warnings
          - calculating
          - stopped_by_user
          example: finished_with_warnings
          type: string
        log_time:
          example: 2018-11-21T09:48:09.000Z
          type: string
        job_started:
          example: 2018-11-21T10:47:53.000Z
          type: string
        job_finished:
          example: 2018-11-21T10:48:08.000Z
          type: string
        to_process_size:
          example: 16515610
          type: integer
        processed_size:
          example: 12115125
          type: integer
        to_process_files:
          example: 126
          type: integer
        processed_files:
          example: 113
          type: integer
        finalized_files:
          example: 126
          type: integer
        estimation_time:
          type: integer
        bandwidth:
          type: integer
      type: object
    nodeum_file_collection:
      example:
        count: 1
        files:
        - parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: 2018-12-10T08:33:47.000Z
          access_date: 2018-12-10T15:27:51.000Z
          modification_date: 2018-12-10T15:29:23.000Z
          name: my-file.txt
          primary_id: 100
          permission: 100666
          id: 105
          type: file
        - parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: 2018-12-10T08:33:47.000Z
          access_date: 2018-12-10T15:27:51.000Z
          modification_date: 2018-12-10T15:29:23.000Z
          name: my-file.txt
          primary_id: 100
          permission: 100666
          id: 105
          type: file
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        files:
          items:
            $ref: '#/components/schemas/nodeum_file'
          readOnly: true
          type: array
      type: object
    import_file_collection:
      example:
        import_files:
        - parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: 2018-12-10T08:33:47.000Z
          access_date: 2018-12-10T15:27:51.000Z
          modification_date: 2018-12-10T15:29:23.000Z
          name: my-file.txt
          primary_id: 100
          permission: 100666
          id: 105
          type: file
        - parent: 100
          uid: 1000
          gid: 1000
          size: 1063457
          change_date: 2018-12-10T08:33:47.000Z
          access_date: 2018-12-10T15:27:51.000Z
          modification_date: 2018-12-10T15:29:23.000Z
          name: my-file.txt
          primary_id: 100
          permission: 100666
          id: 105
          type: file
        count: 1
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        import_files:
          items:
            $ref: '#/components/schemas/import_file'
          readOnly: true
          type: array
      type: object
    on_tapes_file_collection:
      example:
        count: 1
        on_tapes_files:
        - size: 1063457
          name: my-file.txt
          id: 105
          type: file
          barcodes:
          - NOD407L5
          - NOD415L5
        - size: 1063457
          name: my-file.txt
          id: 105
          type: file
          barcodes:
          - NOD407L5
          - NOD415L5
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        on_tapes_files:
          items:
            $ref: '#/components/schemas/on_tapes_file'
          readOnly: true
          type: array
      type: object
    mount_collection:
      example:
        mounts:
        - nas_share_name: nas_share_name
          nas_name: nas_name
          cloud_connector_id: 5
          cloud_bucket_id: 5
          tape_id: 2
          source: //server.local/shared_folder
          cloud_bucket_name: cloud_bucket_name
          type: cifs
          pool_id: 0
          pool_name: pool_name
          major_minor: 0:189
          target: /mnt/MOUNT_POINTS/folder
          tape_library_serial: tape_library_serial
          nas_share_id: 1
          cloud_connector_name: cloud_connector_name
          tape_library_id: 7
          tape_barcode: tape_barcode
          options: vers=3.0,rsize=1048576,wsize=1048576
          id: 123
          nas_id: 6
          tape_library_name: tape_library_name
        - nas_share_name: nas_share_name
          nas_name: nas_name
          cloud_connector_id: 5
          cloud_bucket_id: 5
          tape_id: 2
          source: //server.local/shared_folder
          cloud_bucket_name: cloud_bucket_name
          type: cifs
          pool_id: 0
          pool_name: pool_name
          major_minor: 0:189
          target: /mnt/MOUNT_POINTS/folder
          tape_library_serial: tape_library_serial
          nas_share_id: 1
          cloud_connector_name: cloud_connector_name
          tape_library_id: 7
          tape_barcode: tape_barcode
          options: vers=3.0,rsize=1048576,wsize=1048576
          id: 123
          nas_id: 6
          tape_library_name: tape_library_name
      properties:
        mounts:
          items:
            $ref: '#/components/schemas/mount_info'
          readOnly: true
          type: array
      type: object
    container_collection:
      example:
        count: 1
        containers:
        - stat_total_files: 99301
          only_on_cache_file_count: 19123
          stat_total_size: 6145076462
          stat_size_on_cache: 6899417088
          quota_total_size: 0
          guest_right: read
          last_update: 2019-08-05T14:24:15.000Z
          name: my-container
          comment: Read only container for random stuff
          id: 100
          quota_on_cache: 6
          only_on_cache_file_size_sum: 3294517012
        - stat_total_files: 99301
          only_on_cache_file_count: 19123
          stat_total_size: 6145076462
          stat_size_on_cache: 6899417088
          quota_total_size: 0
          guest_right: read
          last_update: 2019-08-05T14:24:15.000Z
          name: my-container
          comment: Read only container for random stuff
          id: 100
          quota_on_cache: 6
          only_on_cache_file_size_sum: 3294517012
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        containers:
          items:
            $ref: '#/components/schemas/container'
          readOnly: true
          type: array
      type: object
    container_privilege_collection:
      example:
        count: 1
        container_privileges:
        - name: admin
          id: 1
          privilege: read_write
          type: user
        - name: admin
          id: 1
          privilege: read_write
          type: user
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        container_privileges:
          items:
            $ref: '#/components/schemas/container_privilege'
          readOnly: true
          type: array
      type: object
    tape_library_collection:
      example:
        tape_libraries:
        - null
        - null
        count: 1
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        tape_libraries:
          items:
            $ref: '#/components/schemas/tape_library'
          readOnly: true
          type: array
      type: object
    tape_drive_collection:
      example:
        count: 1
        tape_drives:
        - null
        - null
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        tape_drives:
          items:
            $ref: '#/components/schemas/tape_drive'
          readOnly: true
          type: array
      type: object
    tape_collection:
      example:
        tapes:
        - need_to_check: true
          last_repack: last_repack
          ejected: true
          last_size_update: last_size_update
          type: data_lto5
          date_in: date_in
          write_protect: true
          tape_library_id: 2
          known: true
          force_import_type: true
          id: 10
          locked: true
          free: 6
          barcode: NOD407L5
          cleaning: true
          last_maintenance: last_maintenance
          date_move: date_move
          max: 1
          repack_status: true
          scratch: true
          pool_id: 6
          mounted: true
          location: Slot 2
          hash: hash
          mount_count: 0
        - need_to_check: true
          last_repack: last_repack
          ejected: true
          last_size_update: last_size_update
          type: data_lto5
          date_in: date_in
          write_protect: true
          tape_library_id: 2
          known: true
          force_import_type: true
          id: 10
          locked: true
          free: 6
          barcode: NOD407L5
          cleaning: true
          last_maintenance: last_maintenance
          date_move: date_move
          max: 1
          repack_status: true
          scratch: true
          pool_id: 6
          mounted: true
          location: Slot 2
          hash: hash
          mount_count: 0
        count: 1
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        tapes:
          items:
            $ref: '#/components/schemas/tape'
          readOnly: true
          type: array
      type: object
    tape_stat_collection:
      example:
        tape_stats:
        - bytes_read_from_medium: 6
          bytes_written_to_medium: 3
          data_compression_enabled: 3
          beginning_of_medium_passes: 8
          bytes_transferred_to_app_client: 1
          last_load_read_compression_ratio: 7
          total_used_native_capacity: 9
          fatal_suspended_reads: 7
          partition_0_remaining_capacity: 3
          partition_0_maximum_capacity: 7
          barcode: barcode
          unrecovered_read_errors: 3
          read_compression_ratio: 6
          medium_mount_time: 1
          medium_ready_time: 4
          worm: 6
          partition_1_remaining_capacity: 3
          mbytes_transferred_to_app_client: 6
          mounts: 0
          last_mount_unrecovered_write_errors: 2
          partition_1_maximum_capacity: 5
          bytes_transferred_from_app_client: 5
          write_servo_errors: 2
          last_mount_mbytes_read: 1
          datasets_written: 6
          last_mount_unrecovered_read_errors: 4
          fatal_suspended_writes: 6
          lifetime_mbytes_written: 1
          recovered_write_data_errors: 5
          recovered_read_errors: 9
          write_perms: 0
          unrecovered_write_data_errors: 5
          write_protect: 9
          mbytes_written_to_medium: 6
          write_compression_ratio: 3
          datasets_read: 1
          mbytes_transferred_from_app_client: 6
          suspended_writes: 7
          suspended_reads: 8
          last_load_write_compression_ratio: 6
          total_native_capacity: 5
          log_time: log_time
          middle_of_tape_passes: 9
          last_mount_mbytes_written: 7
          mbytes_read_from_medium: 2
          read_retries: 0
          read_perms: 4
          lifetime_mbytes_read: 1
          unrecovered_write_servo_errors: 7
          write_retries: 7
        - bytes_read_from_medium: 6
          bytes_written_to_medium: 3
          data_compression_enabled: 3
          beginning_of_medium_passes: 8
          bytes_transferred_to_app_client: 1
          last_load_read_compression_ratio: 7
          total_used_native_capacity: 9
          fatal_suspended_reads: 7
          partition_0_remaining_capacity: 3
          partition_0_maximum_capacity: 7
          barcode: barcode
          unrecovered_read_errors: 3
          read_compression_ratio: 6
          medium_mount_time: 1
          medium_ready_time: 4
          worm: 6
          partition_1_remaining_capacity: 3
          mbytes_transferred_to_app_client: 6
          mounts: 0
          last_mount_unrecovered_write_errors: 2
          partition_1_maximum_capacity: 5
          bytes_transferred_from_app_client: 5
          write_servo_errors: 2
          last_mount_mbytes_read: 1
          datasets_written: 6
          last_mount_unrecovered_read_errors: 4
          fatal_suspended_writes: 6
          lifetime_mbytes_written: 1
          recovered_write_data_errors: 5
          recovered_read_errors: 9
          write_perms: 0
          unrecovered_write_data_errors: 5
          write_protect: 9
          mbytes_written_to_medium: 6
          write_compression_ratio: 3
          datasets_read: 1
          mbytes_transferred_from_app_client: 6
          suspended_writes: 7
          suspended_reads: 8
          last_load_write_compression_ratio: 6
          total_native_capacity: 5
          log_time: log_time
          middle_of_tape_passes: 9
          last_mount_mbytes_written: 7
          mbytes_read_from_medium: 2
          read_retries: 0
          read_perms: 4
          lifetime_mbytes_read: 1
          unrecovered_write_servo_errors: 7
          write_retries: 7
        count: 1
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        tape_stats:
          items:
            $ref: '#/components/schemas/tape_stat'
          readOnly: true
          type: array
      type: object
    pool_collection:
      example:
        count: 1
        pools:
        - name: offline-tapes
          comment: ""
          primary_id: 100
          id: 6
          type: offline_archive
          content: tape
        - name: offline-tapes
          comment: ""
          primary_id: 100
          id: 6
          type: offline_archive
          content: tape
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        pools:
          items:
            $ref: '#/components/schemas/pool'
          readOnly: true
          type: array
      type: object
    cloud_connector_collection:
      example:
        count: 1
        cloud_connectors:
        - secret_key: secret_key
          provider: generic_s3
          url_proxy: url_proxy
          access_key: access_key
          name: name
          id: 0
          region: region
          url: url
        - secret_key: secret_key
          provider: generic_s3
          url_proxy: url_proxy
          access_key: access_key
          name: name
          id: 0
          region: region
          url: url
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        cloud_connectors:
          items:
            $ref: '#/components/schemas/cloud_connector'
          readOnly: true
          type: array
      type: object
    cloud_bucket_collection:
      example:
        count: 1
        cloud_buckets:
        - file_count: 5
          cloud_connector_id: 6
          price: price
          name: name
          location: location
          id: 0
          pool_id: 1
          file_size_sum: 5
        - file_count: 5
          cloud_connector_id: 6
          price: price
          name: name
          location: location
          id: 0
          pool_id: 1
          file_size_sum: 5
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        cloud_buckets:
          items:
            $ref: '#/components/schemas/cloud_bucket'
          readOnly: true
          type: array
      type: object
    cloud_bucket_simple_collection:
      example:
        cloud_buckets:
        - file_count: 5
          cloud_connector_id: 6
          price: price
          name: name
          location: location
          id: 0
          pool_id: 1
          file_size_sum: 5
        - file_count: 5
          cloud_connector_id: 6
          price: price
          name: name
          location: location
          id: 0
          pool_id: 1
          file_size_sum: 5
      properties:
        cloud_buckets:
          items:
            $ref: '#/components/schemas/cloud_bucket'
          readOnly: true
          type: array
      type: object
    nas_collection:
      example:
        nas:
        - price: "120.0"
          name: samba
          host: samba.local
          comment: Local NAS
          id: 2
          type: smb_v3
        - price: "120.0"
          name: samba
          host: samba.local
          comment: Local NAS
          id: 2
          type: smb_v3
        count: 1
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        nas:
          items:
            $ref: '#/components/schemas/nas'
          readOnly: true
          type: array
      type: object
    nas_share_collection:
      example:
        count: 1
        nas_shares:
        - file_count: 0
          path: archives/general
          password: '[censored]'
          name: archives_general
          options: rsize=1048576,wsize=1048576
          id: 10
          nas_id: 2
          pool_id: 6
          file_size_sum: 6
          username: admin
        - file_count: 0
          path: archives/general
          password: '[censored]'
          name: archives_general
          options: rsize=1048576,wsize=1048576
          id: 10
          nas_id: 2
          pool_id: 6
          file_size_sum: 6
          username: admin
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        nas_shares:
          items:
            $ref: '#/components/schemas/nas_share'
          readOnly: true
          type: array
      type: object
    task_collection:
      example:
        count: 1
        tasks:
        - modification_username: modification_username
          workflow_action: copy
          job_finished: job_finished
          job_started: job_started
          source_type: container
          conflict_resolution: rename
          workflow_type: active_archive
          creation_date: creation_date
          priority: 6
          processed_size: 1
          destination_type: container
          to_process_size: 5
          creation_username: creation_username
          modification_date: modification_date
          name: name
          activate: true
          action: noop
          comment: comment
          id: 0
          status: not_activated
        - modification_username: modification_username
          workflow_action: copy
          job_finished: job_finished
          job_started: job_started
          source_type: container
          conflict_resolution: rename
          workflow_type: active_archive
          creation_date: creation_date
          priority: 6
          processed_size: 1
          destination_type: container
          to_process_size: 5
          creation_username: creation_username
          modification_date: modification_date
          name: name
          activate: true
          action: noop
          comment: comment
          id: 0
          status: not_activated
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        tasks:
          items:
            $ref: '#/components/schemas/task'
          readOnly: true
          type: array
      type: object
    task_source_collection:
      example:
        task_sources:
        - container:
            stat_total_files: 99301
            only_on_cache_file_count: 19123
            stat_total_size: 6145076462
            stat_size_on_cache: 6899417088
            quota_total_size: 0
            guest_right: read
            last_update: 2019-08-05T14:24:15.000Z
            name: my-container
            comment: Read only container for random stuff
            id: 100
            quota_on_cache: 6
            only_on_cache_file_size_sum: 3294517012
          file:
            parent: 100
            uid: 1000
            gid: 1000
            size: 1063457
            change_date: 2018-12-10T08:33:47.000Z
            access_date: 2018-12-10T15:27:51.000Z
            modification_date: 2018-12-10T15:29:23.000Z
            name: my-file.txt
            primary_id: 100
            permission: 100666
            id: 105
            type: file
          tape:
            need_to_check: true
            last_repack: last_repack
            ejected: true
            last_size_update: last_size_update
            type: data_lto5
            date_in: date_in
            write_protect: true
            tape_library_id: 2
            known: true
            force_import_type: true
            id: 10
            locked: true
            free: 6
            barcode: NOD407L5
            cleaning: true
            last_maintenance: last_maintenance
            date_move: date_move
            max: 1
            repack_status: true
            scratch: true
            pool_id: 6
            mounted: true
            location: Slot 2
            hash: hash
            mount_count: 0
          pool:
            name: offline-tapes
            comment: ""
            primary_id: 100
            id: 6
            type: offline_archive
            content: tape
          range:
          - 150000
          - 290000
          id: 0
          import_file:
            parent: 100
            uid: 1000
            gid: 1000
            size: 1063457
            change_date: 2018-12-10T08:33:47.000Z
            access_date: 2018-12-10T15:27:51.000Z
            modification_date: 2018-12-10T15:29:23.000Z
            name: my-file.txt
            primary_id: 100
            permission: 100666
            id: 105
            type: file
        - container:
            stat_total_files: 99301
            only_on_cache_file_count: 19123
            stat_total_size: 6145076462
            stat_size_on_cache: 6899417088
            quota_total_size: 0
            guest_right: read
            last_update: 2019-08-05T14:24:15.000Z
            name: my-container
            comment: Read only container for random stuff
            id: 100
            quota_on_cache: 6
            only_on_cache_file_size_sum: 3294517012
          file:
            parent: 100
            uid: 1000
            gid: 1000
            size: 1063457
            change_date: 2018-12-10T08:33:47.000Z
            access_date: 2018-12-10T15:27:51.000Z
            modification_date: 2018-12-10T15:29:23.000Z
            name: my-file.txt
            primary_id: 100
            permission: 100666
            id: 105
            type: file
          tape:
            need_to_check: true
            last_repack: last_repack
            ejected: true
            last_size_update: last_size_update
            type: data_lto5
            date_in: date_in
            write_protect: true
            tape_library_id: 2
            known: true
            force_import_type: true
            id: 10
            locked: true
            free: 6
            barcode: NOD407L5
            cleaning: true
            last_maintenance: last_maintenance
            date_move: date_move
            max: 1
            repack_status: true
            scratch: true
            pool_id: 6
            mounted: true
            location: Slot 2
            hash: hash
            mount_count: 0
          pool:
            name: offline-tapes
            comment: ""
            primary_id: 100
            id: 6
            type: offline_archive
            content: tape
          range:
          - 150000
          - 290000
          id: 0
          import_file:
            parent: 100
            uid: 1000
            gid: 1000
            size: 1063457
            change_date: 2018-12-10T08:33:47.000Z
            access_date: 2018-12-10T15:27:51.000Z
            modification_date: 2018-12-10T15:29:23.000Z
            name: my-file.txt
            primary_id: 100
            permission: 100666
            id: 105
            type: file
        count: 1
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        task_sources:
          items:
            $ref: '#/components/schemas/task_source_down'
          readOnly: true
          type: array
      type: object
    task_destination_collection:
      example:
        count: 1
        task_destinations:
        - container:
            stat_total_files: 99301
            only_on_cache_file_count: 19123
            stat_total_size: 6145076462
            stat_size_on_cache: 6899417088
            quota_total_size: 0
            guest_right: read
            last_update: 2019-08-05T14:24:15.000Z
            name: my-container
            comment: Read only container for random stuff
            id: 100
            quota_on_cache: 6
            only_on_cache_file_size_sum: 3294517012
          folder:
            parent: 100
            uid: 1000
            gid: 1000
            size: 1063457
            change_date: 2018-12-10T08:33:47.000Z
            access_date: 2018-12-10T15:27:51.000Z
            modification_date: 2018-12-10T15:29:23.000Z
            name: my-file.txt
            primary_id: 100
            permission: 100666
            id: 105
            type: file
          tape:
            need_to_check: true
            last_repack: last_repack
            ejected: true
            last_size_update: last_size_update
            type: data_lto5
            date_in: date_in
            write_protect: true
            tape_library_id: 2
            known: true
            force_import_type: true
            id: 10
            locked: true
            free: 6
            barcode: NOD407L5
            cleaning: true
            last_maintenance: last_maintenance
            date_move: date_move
            max: 1
            repack_status: true
            scratch: true
            pool_id: 6
            mounted: true
            location: Slot 2
            hash: hash
            mount_count: 0
          pool:
            name: offline-tapes
            comment: ""
            primary_id: 100
            id: 6
            type: offline_archive
            content: tape
          id: 0
        - container:
            stat_total_files: 99301
            only_on_cache_file_count: 19123
            stat_total_size: 6145076462
            stat_size_on_cache: 6899417088
            quota_total_size: 0
            guest_right: read
            last_update: 2019-08-05T14:24:15.000Z
            name: my-container
            comment: Read only container for random stuff
            id: 100
            quota_on_cache: 6
            only_on_cache_file_size_sum: 3294517012
          folder:
            parent: 100
            uid: 1000
            gid: 1000
            size: 1063457
            change_date: 2018-12-10T08:33:47.000Z
            access_date: 2018-12-10T15:27:51.000Z
            modification_date: 2018-12-10T15:29:23.000Z
            name: my-file.txt
            primary_id: 100
            permission: 100666
            id: 105
            type: file
          tape:
            need_to_check: true
            last_repack: last_repack
            ejected: true
            last_size_update: last_size_update
            type: data_lto5
            date_in: date_in
            write_protect: true
            tape_library_id: 2
            known: true
            force_import_type: true
            id: 10
            locked: true
            free: 6
            barcode: NOD407L5
            cleaning: true
            last_maintenance: last_maintenance
            date_move: date_move
            max: 1
            repack_status: true
            scratch: true
            pool_id: 6
            mounted: true
            location: Slot 2
            hash: hash
            mount_count: 0
          pool:
            name: offline-tapes
            comment: ""
            primary_id: 100
            id: 6
            type: offline_archive
            content: tape
          id: 0
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        task_destinations:
          items:
            $ref: '#/components/schemas/task_destination_down'
          readOnly: true
          type: array
      type: object
    task_schedule_collection:
      example:
        task_schedules:
        - next: 2019-10-11T15:00:00Z
          missed_last: 2019-10-11T13:00:00Z
          missed_first: 2019-10-11T11:00:00Z
          rrule: |-
            DTSTART;TZID=Europe/Paris:20190705T085000
            RRULE:FREQ=WEEKLY
          skipped_count: 0
          task_id: 16
          id: 0
          done: false
          missed_count: 2
        - next: 2019-10-11T15:00:00Z
          missed_last: 2019-10-11T13:00:00Z
          missed_first: 2019-10-11T11:00:00Z
          rrule: |-
            DTSTART;TZID=Europe/Paris:20190705T085000
            RRULE:FREQ=WEEKLY
          skipped_count: 0
          task_id: 16
          id: 0
          done: false
          missed_count: 2
        count: 1
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        task_schedules:
          items:
            $ref: '#/components/schemas/task_schedule'
          readOnly: true
          type: array
      type: object
    task_option_collection:
      example:
        task_options:
        - id: 0
          type: file_checksum
          value: value
        - id: 0
          type: file_checksum
          value: value
        count: 1
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        task_options:
          items:
            $ref: '#/components/schemas/task_option'
          readOnly: true
          type: array
      type: object
    task_callback_collection:
      example:
        task_callbacks:
        - id: 0
          type: filter
          script: script
        - id: 0
          type: filter
          script: script
        count: 1
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        task_callbacks:
          items:
            $ref: '#/components/schemas/task_callback'
          readOnly: true
          type: array
      type: object
    task_metadatum_collection:
      example:
        task_metadata:
        - id: 0
          value: value
          key: key
        - id: 0
          value: value
          key: key
        count: 1
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        task_metadata:
          items:
            $ref: '#/components/schemas/task_metadatum'
          readOnly: true
          type: array
      type: object
    task_execution_collection:
      example:
        count: 1
        task_executions:
        - workflow_action: copy
          to_process_files: 126
          bandwidth: 1
          job_finished: 2018-11-21T10:48:08.000Z
          job_started: 2018-11-21T10:47:53.000Z
          task_id: 0
          source_type: container
          processed_files: 113
          workflow_type: active_archive
          log_time: 2018-11-21T09:48:09.000Z
          processed_size: 12115125
          destination_type: container
          to_process_size: 16515610
          finalized_files: 126
          name: name
          estimation_time: 6
          id: "1542797273225418555"
          status: finished_with_warnings
        - workflow_action: copy
          to_process_files: 126
          bandwidth: 1
          job_finished: 2018-11-21T10:48:08.000Z
          job_started: 2018-11-21T10:47:53.000Z
          task_id: 0
          source_type: container
          processed_files: 113
          workflow_type: active_archive
          log_time: 2018-11-21T09:48:09.000Z
          processed_size: 12115125
          destination_type: container
          to_process_size: 16515610
          finalized_files: 126
          name: name
          estimation_time: 6
          id: "1542797273225418555"
          status: finished_with_warnings
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        task_executions:
          items:
            $ref: '#/components/schemas/task_execution'
          readOnly: true
          type: array
      type: object
    reset:
      properties:
        sections:
          description: sections selected for reset
          items:
            $ref: '#/components/schemas/reset_sections'
          type: array
      type: object
    system_user_collection:
      example:
        count: 1
        users:
        - uid: 0
          gid: 6
          name: name
          info: info
        - uid: 0
          gid: 6
          name: name
          info: info
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        users:
          items:
            $ref: '#/components/schemas/system_user'
          readOnly: true
          type: array
      type: object
    system_user:
      example:
        uid: 0
        gid: 6
        name: name
        info: info
      properties:
        name:
          type: string
        uid:
          type: integer
        gid:
          type: integer
        info:
          type: string
      type: object
    system_group_collection:
      example:
        count: 1
        groups:
        - gid: 0
          name: name
          users:
          - users
          - users
        - gid: 0
          name: name
          users:
          - users
          - users
      properties:
        count:
          example: 1
          readOnly: true
          type: integer
        groups:
          items:
            $ref: '#/components/schemas/system_group'
          readOnly: true
          type: array
      type: object
    system_group:
      example:
        gid: 0
        name: name
        users:
        - users
        - users
      properties:
        name:
          type: string
        gid:
          type: integer
        users:
          items:
            type: string
          type: array
      type: object
    by_primary_facet:
      allOf:
      - $ref: '#/components/schemas/file_facet'
      - $ref: '#/components/schemas/by_primary_facet_allOf'
    file_facet:
      properties:
        count:
          type: integer
        file_size_sum:
          type: integer
      type: object
    by_date_facet_buckets:
      properties:
        buckets:
          items:
            $ref: '#/components/schemas/by_date_facet_bucket'
          type: array
      type: object
    by_date_facet_bucket:
      allOf:
      - $ref: '#/components/schemas/by_date_facet_bucket_allOf'
      - $ref: '#/components/schemas/by_date_facet'
    by_date_facet:
      allOf:
      - $ref: '#/components/schemas/file_facet'
      - $ref: '#/components/schemas/date_to_file_facets'
    date_to_file_facets:
      properties:
        in_cache:
          $ref: '#/components/schemas/file_facet'
        less_1_week:
          $ref: '#/components/schemas/file_facet'
        less_1_month:
          $ref: '#/components/schemas/file_facet'
        less_3_months:
          $ref: '#/components/schemas/file_facet'
        less_6_months:
          $ref: '#/components/schemas/file_facet'
        less_1_year:
          $ref: '#/components/schemas/file_facet'
        less_2_years:
          $ref: '#/components/schemas/file_facet'
        more_2_years:
          $ref: '#/components/schemas/file_facet'
      type: object
    by_secondary_facet:
      allOf:
      - $ref: '#/components/schemas/file_facet'
      - $ref: '#/components/schemas/type_to_secondary_facets'
    type_to_secondary_facets:
      properties:
        on_secondary_nas:
          $ref: '#/components/schemas/by_secondary_type_facet'
        on_secondary_public_cloud:
          $ref: '#/components/schemas/by_secondary_type_facet'
        on_secondary_object_cloud:
          $ref: '#/components/schemas/by_secondary_type_facet'
        on_secondary_tape:
          $ref: '#/components/schemas/by_secondary_type_facet'
        on_no_secondary:
          $ref: '#/components/schemas/by_secondary_type_facet'
      type: object
    by_secondary_type_facet:
      allOf:
      - $ref: '#/components/schemas/by_date_facet'
      - $ref: '#/components/schemas/by_secondary_type_facet_allOf'
    by_secondary_buckets:
      properties:
        buckets:
          items:
            $ref: '#/components/schemas/by_secondary_bucket'
          type: array
      type: object
    by_secondary_bucket:
      allOf:
      - $ref: '#/components/schemas/by_secondary_bucket_allOf'
      - $ref: '#/components/schemas/by_date_facet'
    by_user_owner_facet:
      allOf:
      - $ref: '#/components/schemas/file_facet'
      - $ref: '#/components/schemas/by_user_owner_facet_allOf'
    by_group_owner_facet:
      allOf:
      - $ref: '#/components/schemas/file_facet'
      - $ref: '#/components/schemas/by_group_owner_facet_allOf'
    by_file_extension_facet:
      allOf:
      - $ref: '#/components/schemas/file_facet'
      - $ref: '#/components/schemas/by_file_extension_facet_allOf'
    by_size_facet:
      allOf:
      - $ref: '#/components/schemas/file_facet'
      - $ref: '#/components/schemas/size_to_date_facets'
    size_to_date_facets:
      properties:
        less_100_kb:
          $ref: '#/components/schemas/by_date_facet'
        less_1_mb:
          $ref: '#/components/schemas/by_date_facet'
        less_10_mb:
          $ref: '#/components/schemas/by_date_facet'
        less_100_mb:
          $ref: '#/components/schemas/by_date_facet'
        less_1_gb:
          $ref: '#/components/schemas/by_date_facet'
        less_10_gb:
          $ref: '#/components/schemas/by_date_facet'
        less_100_gb:
          $ref: '#/components/schemas/by_date_facet'
        more_100_gb:
          $ref: '#/components/schemas/by_date_facet'
      type: object
    mount_info:
      example:
        nas_share_name: nas_share_name
        nas_name: nas_name
        cloud_connector_id: 5
        cloud_bucket_id: 5
        tape_id: 2
        source: //server.local/shared_folder
        cloud_bucket_name: cloud_bucket_name
        type: cifs
        pool_id: 0
        pool_name: pool_name
        major_minor: 0:189
        target: /mnt/MOUNT_POINTS/folder
        tape_library_serial: tape_library_serial
        nas_share_id: 1
        cloud_connector_name: cloud_connector_name
        tape_library_id: 7
        tape_barcode: tape_barcode
        options: vers=3.0,rsize=1048576,wsize=1048576
        id: 123
        nas_id: 6
        tape_library_name: tape_library_name
      properties:
        id:
          example: 123
          type: integer
        major_minor:
          example: 0:189
          type: string
        target:
          example: /mnt/MOUNT_POINTS/folder
          type: string
        source:
          example: //server.local/shared_folder
          type: string
        options:
          example: vers=3.0,rsize=1048576,wsize=1048576
          type: string
        type:
          enum:
          - cifs
          - nfs
          - fuse.s3fs
          - fuse.core_fuse
          - fuse
          example: cifs
          type: string
        pool_id:
          type: integer
        pool_name:
          type: string
        nas_id:
          type: integer
        nas_name:
          type: string
        nas_share_id:
          type: integer
        nas_share_name:
          type: string
        cloud_connector_id:
          type: integer
        cloud_connector_name:
          type: string
        cloud_bucket_id:
          type: integer
        cloud_bucket_name:
          type: string
        tape_id:
          type: integer
        tape_barcode:
          type: string
        tape_library_id:
          type: integer
        tape_library_name:
          type: string
        tape_library_serial:
          type: string
      type: object
    taken_allOf:
      properties:
        value:
          description: Value received
          type: string
    too_short_allOf:
      properties:
        count:
          description: Expected minimum length
          type: integer
    too_long_allOf:
      properties:
        count:
          description: Expected maximum length
          type: integer
    greater_than_allOf:
      properties:
        value:
          description: Value received
          type: integer
        count:
          description: Expected maximum value
          type: integer
    less_than_allOf:
      properties:
        value:
          description: Value received
          type: integer
        count:
          description: Expected minimum value
          type: integer
    occurrence_less_than_allOf:
      properties:
        count:
          description: Expected maximum number of occurrences
          type: integer
        value:
          description: Current number of occurrences
          type: integer
    api_key_full_allOf:
      properties:
        api_key_scopes:
          items:
            $ref: '#/components/schemas/api_key_scope'
          type: array
    nodeum_file_with_path_allOf:
      properties:
        file_path:
          example: /my-container/my-file.txt
          readOnly: true
          type: string
    tape_library_allOf:
      properties:
        id:
          example: 2
          readOnly: true
          type: integer
        name:
          example: my-library
          type: string
        comment:
          type: string
        libso:
          example: ibm_3573-tl
          type: string
        status:
          enum:
          - offline
          - online
          example: online
          readOnly: true
          type: string
        price:
          example: "5.0"
          type: string
    tape_drive_allOf:
      properties:
        id:
          example: 1
          readOnly: true
          type: integer
        tape_library_id:
          example: 2
          readOnly: true
          type: integer
        name:
          example: ""
          type: string
        comment:
          example: ""
          type: string
        libso:
          example: drive_lto
          type: string
        acs:
          type: integer
        lsm:
          type: integer
        panel:
          type: integer
        transport:
          type: integer
        status:
          enum:
          - offline
          - online
          example: online
          readOnly: true
          type: string
        full:
          readOnly: true
          type: integer
        mount_count:
          readOnly: true
          type: integer
        use_to:
          example: Idle
          readOnly: true
          type: string
        use_by:
          example: Idle
          readOnly: true
          type: string
        barcode:
          example: NOD407L5
          readOnly: true
          type: string
        task_id:
          example: 14
          readOnly: true
          type: integer
        use_file_processed_size:
          readOnly: true
          type: integer
        use_file_size_to_process:
          readOnly: true
          type: integer
        use_file_name_processed:
          readOnly: true
          type: string
        bandwidth:
          readOnly: true
          type: integer
    pool_up_allOf:
      properties:
        tape_ids:
          example:
          - 10
          - 11
          - 12
          items:
            type: integer
          type: array
        nas_share_ids:
          example:
          - 15
          items:
            type: integer
          type: array
        cloud_bucket_ids:
          example:
          - 15
          items:
            type: integer
          type: array
    reset_sections:
      properties:
        value:
          enum:
          - full
          - nas_config
          - nas_storage
          - nas_pools
          - tapes_libs
          - tapes_drives
          - tapes_pools
          - clouds_config
          - clouds_storage
          - clouds_pools
          - tasks
          - history
          - templates
          - containers
          - catalog
          - web_users
          - logs
          - audits
          - statistics
          - traces
          type: string
        after:
          description: after date-time criteria for history reset
          format: date-time
          type: string
        before:
          description: before date-time criteria for history reset
          format: date-time
          type: string
      required:
      - value
    by_primary_facet_allOf:
      properties:
        primary_name:
          $ref: '#/components/schemas/by_date_facet_buckets'
    by_date_facet_bucket_allOf:
      properties:
        val:
          type: object
    by_secondary_type_facet_allOf:
      properties:
        secondary_name:
          $ref: '#/components/schemas/by_secondary_buckets'
    by_secondary_bucket_allOf:
      properties:
        val:
          type: string
    by_user_owner_facet_allOf:
      properties:
        user_owner_id:
          $ref: '#/components/schemas/by_date_facet_buckets'
    by_group_owner_facet_allOf:
      properties:
        group_owner_id:
          $ref: '#/components/schemas/by_date_facet_buckets'
    by_file_extension_facet_allOf:
      properties:
        file_extension:
          $ref: '#/components/schemas/by_date_facet_buckets'
  securitySchemes:
    BasicAuth:
      description: |-
        Pass the username and password of a user in the authorization header.
        This currently gives full access.
      scheme: basic
      type: http
    BearerAuth:
      description: |-
        Create an API Key associated to user.
        Access can be restricted with the scope.
        Each API call described below has a scoped mentionned in its description.

        For example :

        **API Key Scope**: files / index

        This means that the API key should have a scope with controller as *files*
        and the action as *index*.
      in: header
      name: Authorization
      type: apiKey
